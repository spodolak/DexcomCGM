{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"id\", \"bsPrefix\", \"size\", \"variant\", \"title\", \"type\", \"toggleLabel\", \"children\", \"onClick\", \"href\", \"target\", \"menuAlign\", \"menuRole\", \"renderMenuOnMount\", \"rootCloseEvent\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from './Button';\nimport ButtonGroup from './ButtonGroup';\nimport Dropdown from './Dropdown';\nimport { alignPropType } from './DropdownMenu';\nvar propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string|number}\n   * @required\n   */\n  id: PropTypes.any,\n  /**\n   * Accessible label for the toggle; the value of `title` if not specified.\n   */\n  toggleLabel: PropTypes.string,\n  /** An `href` passed to the non-toggle Button */\n  href: PropTypes.string,\n  /** An anchor `target` passed to the non-toggle Button */\n  target: PropTypes.string,\n  /** An `onClick` handler passed to the non-toggle Button */\n  onClick: PropTypes.func,\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n  /** A `type` passed to the non-toggle Button */\n  type: PropTypes.string,\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n  /**\n   * Aligns the dropdown menu responsively.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"left\"|\"right\"|{ sm: \"left\"|\"right\" }|{ md: \"left\"|\"right\" }|{ lg: \"left\"|\"right\" }|{ xl: \"left\"|\"right\"} }\n   */\n  menuAlign: alignPropType,\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n  /** @ignore */\n  variant: PropTypes.string,\n  /** @ignore */\n  size: PropTypes.string\n};\nvar defaultProps = {\n  toggleLabel: 'Toggle dropdown',\n  type: 'button'\n};\n/**\n * A convenience component for simple or general use split button dropdowns. Renders a\n * `ButtonGroup` containing a `Button` and a `Button` toggle for the `Dropdown`. All `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of [`Dropdown`'s\n * props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._\n * The Button `variant`, `size` and `bsPrefix` props are passed to the button and toggle,\n * and menu-related props are passed to the `Dropdown.Menu`\n */\n\nvar SplitButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n    bsPrefix = _ref.bsPrefix,\n    size = _ref.size,\n    variant = _ref.variant,\n    title = _ref.title,\n    type = _ref.type,\n    toggleLabel = _ref.toggleLabel,\n    children = _ref.children,\n    onClick = _ref.onClick,\n    href = _ref.href,\n    target = _ref.target,\n    menuAlign = _ref.menuAlign,\n    menuRole = _ref.menuRole,\n    renderMenuOnMount = _ref.renderMenuOnMount,\n    rootCloseEvent = _ref.rootCloseEvent,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props, {\n    as: ButtonGroup\n  }), /*#__PURE__*/React.createElement(Button, {\n    size: size,\n    variant: variant,\n    disabled: props.disabled,\n    bsPrefix: bsPrefix,\n    href: href,\n    target: target,\n    onClick: onClick,\n    type: type\n  }, title), /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    split: true,\n    id: id ? id.toString() : undefined,\n    size: size,\n    variant: variant,\n    disabled: props.disabled,\n    childBsPrefix: bsPrefix\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, toggleLabel)), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    align: menuAlign,\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent\n  }, children));\n});\nSplitButton.propTypes = propTypes;\nSplitButton.defaultProps = defaultProps;\nSplitButton.displayName = 'SplitButton';\nexport default SplitButton;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","Button","ButtonGroup","Dropdown","alignPropType","propTypes","id","any","toggleLabel","string","href","target","onClick","func","title","node","isRequired","type","disabled","bool","menuAlign","menuRole","renderMenuOnMount","rootCloseEvent","bsPrefix","variant","size","defaultProps","SplitButton","forwardRef","_ref","ref","children","props","createElement","as","Toggle","split","toString","undefined","childBsPrefix","className","Menu","align","role","renderOnMount","displayName"],"sources":["/Users/macbook/Desktop/DexcomCGM/node_modules/react-bootstrap/esm/SplitButton.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"id\", \"bsPrefix\", \"size\", \"variant\", \"title\", \"type\", \"toggleLabel\", \"children\", \"onClick\", \"href\", \"target\", \"menuAlign\", \"menuRole\", \"renderMenuOnMount\", \"rootCloseEvent\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from './Button';\nimport ButtonGroup from './ButtonGroup';\nimport Dropdown from './Dropdown';\nimport { alignPropType } from './DropdownMenu';\nvar propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string|number}\n   * @required\n   */\n  id: PropTypes.any,\n\n  /**\n   * Accessible label for the toggle; the value of `title` if not specified.\n   */\n  toggleLabel: PropTypes.string,\n\n  /** An `href` passed to the non-toggle Button */\n  href: PropTypes.string,\n\n  /** An anchor `target` passed to the non-toggle Button */\n  target: PropTypes.string,\n\n  /** An `onClick` handler passed to the non-toggle Button */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** A `type` passed to the non-toggle Button */\n  type: PropTypes.string,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu responsively.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"left\"|\"right\"|{ sm: \"left\"|\"right\" }|{ md: \"left\"|\"right\" }|{ lg: \"left\"|\"right\" }|{ xl: \"left\"|\"right\"} }\n   */\n  menuAlign: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\nvar defaultProps = {\n  toggleLabel: 'Toggle dropdown',\n  type: 'button'\n};\n/**\n * A convenience component for simple or general use split button dropdowns. Renders a\n * `ButtonGroup` containing a `Button` and a `Button` toggle for the `Dropdown`. All `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of [`Dropdown`'s\n * props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._\n * The Button `variant`, `size` and `bsPrefix` props are passed to the button and toggle,\n * and menu-related props are passed to the `Dropdown.Menu`\n */\n\nvar SplitButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      variant = _ref.variant,\n      title = _ref.title,\n      type = _ref.type,\n      toggleLabel = _ref.toggleLabel,\n      children = _ref.children,\n      onClick = _ref.onClick,\n      href = _ref.href,\n      target = _ref.target,\n      menuAlign = _ref.menuAlign,\n      menuRole = _ref.menuRole,\n      renderMenuOnMount = _ref.renderMenuOnMount,\n      rootCloseEvent = _ref.rootCloseEvent,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props, {\n    as: ButtonGroup\n  }), /*#__PURE__*/React.createElement(Button, {\n    size: size,\n    variant: variant,\n    disabled: props.disabled,\n    bsPrefix: bsPrefix,\n    href: href,\n    target: target,\n    onClick: onClick,\n    type: type\n  }, title), /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    split: true,\n    id: id ? id.toString() : undefined,\n    size: size,\n    variant: variant,\n    disabled: props.disabled,\n    childBsPrefix: bsPrefix\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, toggleLabel)), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    align: menuAlign,\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent\n  }, children));\n});\nSplitButton.propTypes = propTypes;\nSplitButton.defaultProps = defaultProps;\nSplitButton.displayName = 'SplitButton';\nexport default SplitButton;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}