{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport ClickAwayListener from '../ClickAwayListener';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nexport var styles = function styles(theme) {\n  var top1 = {\n    top: 8\n  };\n  var bottom1 = {\n    bottom: 8\n  };\n  var right = {\n    justifyContent: 'flex-end'\n  };\n  var left = {\n    justifyContent: 'flex-start'\n  };\n  var top3 = {\n    top: 24\n  };\n  var bottom3 = {\n    bottom: 24\n  };\n  var right3 = {\n    right: 24\n  };\n  var left3 = {\n    left: 24\n  };\n  var center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      zIndex: theme.zIndex.snackbar,\n      position: 'fixed',\n      display: 'flex',\n      left: 8,\n      right: 8,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */\n    anchorOriginTopCenter: _extends({}, top1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, top3, center))),\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */\n    anchorOriginBottomCenter: _extends({}, bottom1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, bottom3, center))),\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */\n    anchorOriginTopRight: _extends({}, top1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, top3, right3))),\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */\n    anchorOriginBottomRight: _extends({}, bottom1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, bottom3, right3))),\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */\n    anchorOriginTopLeft: _extends({}, top1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, top3, left3))),\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */\n    anchorOriginBottomLeft: _extends({}, bottom1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, bottom3, left3)))\n  };\n};\nvar Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(props, ref) {\n  var action = props.action,\n    _props$anchorOrigin = props.anchorOrigin;\n  _props$anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'bottom',\n    horizontal: 'center'\n  } : _props$anchorOrigin;\n  var vertical = _props$anchorOrigin.vertical,\n    horizontal = _props$anchorOrigin.horizontal,\n    _props$autoHideDurati = props.autoHideDuration,\n    autoHideDuration = _props$autoHideDurati === void 0 ? null : _props$autoHideDurati,\n    children = props.children,\n    classes = props.classes,\n    className = props.className,\n    ClickAwayListenerProps = props.ClickAwayListenerProps,\n    ContentProps = props.ContentProps,\n    _props$disableWindowB = props.disableWindowBlurListener,\n    disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,\n    message = props.message,\n    onClose = props.onClose,\n    onEnter = props.onEnter,\n    onEntered = props.onEntered,\n    onEntering = props.onEntering,\n    onExit = props.onExit,\n    onExited = props.onExited,\n    onExiting = props.onExiting,\n    onMouseEnter = props.onMouseEnter,\n    onMouseLeave = props.onMouseLeave,\n    open = props.open,\n    resumeHideDuration = props.resumeHideDuration,\n    _props$TransitionComp = props.TransitionComponent,\n    TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n    _props$transitionDura = props.transitionDuration,\n    transitionDuration = _props$transitionDura === void 0 ? {\n      enter: duration.enteringScreen,\n      exit: duration.leavingScreen\n    } : _props$transitionDura,\n    TransitionProps = props.TransitionProps,\n    other = _objectWithoutProperties(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"classes\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n  var timerAutoHide = React.useRef();\n  var _React$useState = React.useState(true),\n    exited = _React$useState[0],\n    setExited = _React$useState[1];\n  var handleClose = useEventCallback(function () {\n    if (onClose) {\n      onClose.apply(void 0, arguments);\n    }\n  });\n  var setAutoHideTimer = useEventCallback(function (autoHideDurationParam) {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(function () {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(function () {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n    return function () {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  var handlePause = function handlePause() {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n  var handleResume = React.useCallback(function () {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n  var handleMouseEnter = function handleMouseEnter(event) {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n    handlePause();\n  };\n  var handleMouseLeave = function handleMouseLeave(event) {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n    handleResume();\n  };\n  var handleClickAway = function handleClickAway(event) {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n  var handleExited = function handleExited() {\n    setExited(true);\n  };\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n  React.useEffect(function () {\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return function () {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps), /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"anchorOrigin\".concat(capitalize(vertical)).concat(capitalize(horizontal))], className),\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    onEnter: createChainedFunction(handleEnter, onEnter),\n    onEntered: onEntered,\n    onEntering: onEntering,\n    onExit: onExit,\n    onExited: createChainedFunction(handleExited, onExited),\n    onExiting: onExiting,\n    timeout: transitionDuration,\n    direction: vertical === 'top' ? 'down' : 'up'\n  }, TransitionProps), children || /*#__PURE__*/React.createElement(SnackbarContent, _extends({\n    message: message,\n    action: action\n  }, ContentProps)))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n  /**\n   * The anchor of the `Snackbar`.\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   */\n  autoHideDuration: PropTypes.number,\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n  /**\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   */\n  disableWindowBlurListener: PropTypes.bool,\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: PropTypes.any,\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * Callback fired before the transition is entering.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEnter: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n  /**\n   * Callback fired when the transition has entered.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEntered: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n  /**\n   * Callback fired when the transition is entering.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEntering: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n  /**\n   * Callback fired before the transition is exiting.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExit: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n  /**\n   * Callback fired when the transition has exited.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExited: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n  /**\n   * Callback fired when the transition is exiting.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExiting: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n  /**\n   * If `true`, `Snackbar` is open.\n   */\n  open: PropTypes.bool,\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiSnackbar'\n})(Snackbar);","map":{"version":3,"names":["_objectWithoutProperties","_defineProperty","_extends","React","PropTypes","clsx","withStyles","duration","ClickAwayListener","useEventCallback","capitalize","createChainedFunction","deprecatedPropType","Grow","SnackbarContent","styles","theme","top1","top","bottom1","bottom","right","justifyContent","left","top3","bottom3","right3","left3","center","transform","root","zIndex","snackbar","position","display","alignItems","anchorOriginTopCenter","breakpoints","up","anchorOriginBottomCenter","anchorOriginTopRight","anchorOriginBottomRight","anchorOriginTopLeft","anchorOriginBottomLeft","Snackbar","forwardRef","props","ref","action","_props$anchorOrigin","anchorOrigin","vertical","horizontal","_props$autoHideDurati","autoHideDuration","children","classes","className","ClickAwayListenerProps","ContentProps","_props$disableWindowB","disableWindowBlurListener","message","onClose","onEnter","onEntered","onEntering","onExit","onExited","onExiting","onMouseEnter","onMouseLeave","open","resumeHideDuration","_props$TransitionComp","TransitionComponent","_props$transitionDura","transitionDuration","enter","enteringScreen","exit","leavingScreen","TransitionProps","other","timerAutoHide","useRef","_React$useState","useState","exited","setExited","handleClose","apply","arguments","setAutoHideTimer","autoHideDurationParam","clearTimeout","current","setTimeout","useEffect","handlePause","handleResume","useCallback","handleMouseEnter","event","handleMouseLeave","handleClickAway","handleExited","handleEnter","window","addEventListener","removeEventListener","undefined","createElement","onClickAway","concat","appear","in","timeout","direction","process","env","NODE_ENV","propTypes","node","shape","oneOf","isRequired","number","element","object","string","bool","key","any","func","elementType","oneOfType","flip","name"],"sources":["/Users/macbook/Desktop/DexcomCGM/client/node_modules/@material-ui/core/esm/Snackbar/Snackbar.js"],"sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport ClickAwayListener from '../ClickAwayListener';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nexport var styles = function styles(theme) {\n  var top1 = {\n    top: 8\n  };\n  var bottom1 = {\n    bottom: 8\n  };\n  var right = {\n    justifyContent: 'flex-end'\n  };\n  var left = {\n    justifyContent: 'flex-start'\n  };\n  var top3 = {\n    top: 24\n  };\n  var bottom3 = {\n    bottom: 24\n  };\n  var right3 = {\n    right: 24\n  };\n  var left3 = {\n    left: 24\n  };\n  var center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      zIndex: theme.zIndex.snackbar,\n      position: 'fixed',\n      display: 'flex',\n      left: 8,\n      right: 8,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */\n    anchorOriginTopCenter: _extends({}, top1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, top3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */\n    anchorOriginBottomCenter: _extends({}, bottom1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, bottom3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */\n    anchorOriginTopRight: _extends({}, top1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, top3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */\n    anchorOriginBottomRight: _extends({}, bottom1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, bottom3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */\n    anchorOriginTopLeft: _extends({}, top1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, top3, left3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */\n    anchorOriginBottomLeft: _extends({}, bottom1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, bottom3, left3)))\n  };\n};\nvar Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(props, ref) {\n  var action = props.action,\n      _props$anchorOrigin = props.anchorOrigin;\n  _props$anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'bottom',\n    horizontal: 'center'\n  } : _props$anchorOrigin;\n\n  var vertical = _props$anchorOrigin.vertical,\n      horizontal = _props$anchorOrigin.horizontal,\n      _props$autoHideDurati = props.autoHideDuration,\n      autoHideDuration = _props$autoHideDurati === void 0 ? null : _props$autoHideDurati,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      ClickAwayListenerProps = props.ClickAwayListenerProps,\n      ContentProps = props.ContentProps,\n      _props$disableWindowB = props.disableWindowBlurListener,\n      disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,\n      message = props.message,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      open = props.open,\n      resumeHideDuration = props.resumeHideDuration,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n  } : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"classes\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  var timerAutoHide = React.useRef();\n\n  var _React$useState = React.useState(true),\n      exited = _React$useState[0],\n      setExited = _React$useState[1];\n\n  var handleClose = useEventCallback(function () {\n    if (onClose) {\n      onClose.apply(void 0, arguments);\n    }\n  });\n  var setAutoHideTimer = useEventCallback(function (autoHideDurationParam) {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(function () {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(function () {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return function () {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  var handlePause = function handlePause() {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  var handleResume = React.useCallback(function () {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  var handleMouseEnter = function handleMouseEnter(event) {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  var handleMouseLeave = function handleMouseLeave(event) {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  var handleClickAway = function handleClickAway(event) {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n  };\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n\n  React.useEffect(function () {\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return function () {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps), /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"anchorOrigin\".concat(capitalize(vertical)).concat(capitalize(horizontal))], className),\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    onEnter: createChainedFunction(handleEnter, onEnter),\n    onEntered: onEntered,\n    onEntering: onEntering,\n    onExit: onExit,\n    onExited: createChainedFunction(handleExited, onExited),\n    onExiting: onExiting,\n    timeout: transitionDuration,\n    direction: vertical === 'top' ? 'down' : 'up'\n  }, TransitionProps), children || /*#__PURE__*/React.createElement(SnackbarContent, _extends({\n    message: message,\n    action: action\n  }, ContentProps)))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: PropTypes.any,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is entering.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEnter: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the transition has entered.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEntered: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the transition is entering.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEntering: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired before the transition is exiting.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExit: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the transition has exited.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExited: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the transition is exiting.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExiting: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, `Snackbar` is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiSnackbar'\n})(Snackbar);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}