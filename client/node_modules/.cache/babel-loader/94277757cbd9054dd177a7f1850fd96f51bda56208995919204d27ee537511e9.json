{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { getDisplayName } from '@material-ui/utils';\nexport default function mergeClasses() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var baseClasses = options.baseClasses,\n    newClasses = options.newClasses,\n    Component = options.Component;\n  if (!newClasses) {\n    return baseClasses;\n  }\n  var nextClasses = _extends({}, baseClasses);\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof newClasses === 'string') {\n      console.error([\"Material-UI: The value `\".concat(newClasses, \"` \") + \"provided to the classes prop of \".concat(getDisplayName(Component), \" is incorrect.\"), 'You might want to use the className prop instead.'].join('\\n'));\n      return baseClasses;\n    }\n  }\n  Object.keys(newClasses).forEach(function (key) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!baseClasses[key] && newClasses[key]) {\n        console.error([\"Material-UI: The key `\".concat(key, \"` \") + \"provided to the classes prop is not implemented in \".concat(getDisplayName(Component), \".\"), \"You can only override one of the following: \".concat(Object.keys(baseClasses).join(','), \".\")].join('\\n'));\n      }\n      if (newClasses[key] && typeof newClasses[key] !== 'string') {\n        console.error([\"Material-UI: The key `\".concat(key, \"` \") + \"provided to the classes prop is not valid for \".concat(getDisplayName(Component), \".\"), \"You need to provide a non empty string instead of: \".concat(newClasses[key], \".\")].join('\\n'));\n      }\n    }\n    if (newClasses[key]) {\n      nextClasses[key] = \"\".concat(baseClasses[key], \" \").concat(newClasses[key]);\n    }\n  });\n  return nextClasses;\n}","map":{"version":3,"names":["_extends","getDisplayName","mergeClasses","options","arguments","length","undefined","baseClasses","newClasses","Component","nextClasses","process","env","NODE_ENV","console","error","concat","join","Object","keys","forEach","key"],"sources":["/Users/macbook/Desktop/DexcomCGM/node_modules/@material-ui/styles/esm/mergeClasses/mergeClasses.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { getDisplayName } from '@material-ui/utils';\nexport default function mergeClasses() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var baseClasses = options.baseClasses,\n      newClasses = options.newClasses,\n      Component = options.Component;\n\n  if (!newClasses) {\n    return baseClasses;\n  }\n\n  var nextClasses = _extends({}, baseClasses);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof newClasses === 'string') {\n      console.error([\"Material-UI: The value `\".concat(newClasses, \"` \") + \"provided to the classes prop of \".concat(getDisplayName(Component), \" is incorrect.\"), 'You might want to use the className prop instead.'].join('\\n'));\n      return baseClasses;\n    }\n  }\n\n  Object.keys(newClasses).forEach(function (key) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!baseClasses[key] && newClasses[key]) {\n        console.error([\"Material-UI: The key `\".concat(key, \"` \") + \"provided to the classes prop is not implemented in \".concat(getDisplayName(Component), \".\"), \"You can only override one of the following: \".concat(Object.keys(baseClasses).join(','), \".\")].join('\\n'));\n      }\n\n      if (newClasses[key] && typeof newClasses[key] !== 'string') {\n        console.error([\"Material-UI: The key `\".concat(key, \"` \") + \"provided to the classes prop is not valid for \".concat(getDisplayName(Component), \".\"), \"You need to provide a non empty string instead of: \".concat(newClasses[key], \".\")].join('\\n'));\n      }\n    }\n\n    if (newClasses[key]) {\n      nextClasses[key] = \"\".concat(baseClasses[key], \" \").concat(newClasses[key]);\n    }\n  });\n  return nextClasses;\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,SAASC,cAAc,QAAQ,oBAAoB;AACnD,eAAe,SAASC,YAAYA,CAAA,EAAG;EACrC,IAAIC,OAAO,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACpF,IAAIG,WAAW,GAAGJ,OAAO,CAACI,WAAW;IACjCC,UAAU,GAAGL,OAAO,CAACK,UAAU;IAC/BC,SAAS,GAAGN,OAAO,CAACM,SAAS;EAEjC,IAAI,CAACD,UAAU,EAAE;IACf,OAAOD,WAAW;EACpB;EAEA,IAAIG,WAAW,GAAGV,QAAQ,CAAC,CAAC,CAAC,EAAEO,WAAW,CAAC;EAE3C,IAAII,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,IAAI,OAAOL,UAAU,KAAK,QAAQ,EAAE;MAClCM,OAAO,CAACC,KAAK,CAAC,CAAC,0BAA0B,CAACC,MAAM,CAACR,UAAU,EAAE,IAAI,CAAC,GAAG,kCAAkC,CAACQ,MAAM,CAACf,cAAc,CAACQ,SAAS,CAAC,EAAE,gBAAgB,CAAC,EAAE,mDAAmD,CAAC,CAACQ,IAAI,CAAC,IAAI,CAAC,CAAC;MAC7N,OAAOV,WAAW;IACpB;EACF;EAEAW,MAAM,CAACC,IAAI,CAACX,UAAU,CAAC,CAACY,OAAO,CAAC,UAAUC,GAAG,EAAE;IAC7C,IAAIV,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzC,IAAI,CAACN,WAAW,CAACc,GAAG,CAAC,IAAIb,UAAU,CAACa,GAAG,CAAC,EAAE;QACxCP,OAAO,CAACC,KAAK,CAAC,CAAC,wBAAwB,CAACC,MAAM,CAACK,GAAG,EAAE,IAAI,CAAC,GAAG,qDAAqD,CAACL,MAAM,CAACf,cAAc,CAACQ,SAAS,CAAC,EAAE,GAAG,CAAC,EAAE,8CAA8C,CAACO,MAAM,CAACE,MAAM,CAACC,IAAI,CAACZ,WAAW,CAAC,CAACU,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAACA,IAAI,CAAC,IAAI,CAAC,CAAC;MACvQ;MAEA,IAAIT,UAAU,CAACa,GAAG,CAAC,IAAI,OAAOb,UAAU,CAACa,GAAG,CAAC,KAAK,QAAQ,EAAE;QAC1DP,OAAO,CAACC,KAAK,CAAC,CAAC,wBAAwB,CAACC,MAAM,CAACK,GAAG,EAAE,IAAI,CAAC,GAAG,gDAAgD,CAACL,MAAM,CAACf,cAAc,CAACQ,SAAS,CAAC,EAAE,GAAG,CAAC,EAAE,qDAAqD,CAACO,MAAM,CAACR,UAAU,CAACa,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAACJ,IAAI,CAAC,IAAI,CAAC,CAAC;MACtP;IACF;IAEA,IAAIT,UAAU,CAACa,GAAG,CAAC,EAAE;MACnBX,WAAW,CAACW,GAAG,CAAC,GAAG,EAAE,CAACL,MAAM,CAACT,WAAW,CAACc,GAAG,CAAC,EAAE,GAAG,CAAC,CAACL,MAAM,CAACR,UAAU,CAACa,GAAG,CAAC,CAAC;IAC7E;EACF,CAAC,CAAC;EACF,OAAOX,WAAW;AACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}