{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport ownerDocument from '../utils/ownerDocument';\nimport List from '../List';\nimport getScrollbarSize from '../utils/getScrollbarSize';\nimport useForkRef from '../utils/useForkRef';\nfunction nextItem(list, item, disableListWrap) {\n  if (list === item) {\n    return list.firstChild;\n  }\n  if (item && item.nextElementSibling) {\n    return item.nextElementSibling;\n  }\n  return disableListWrap ? null : list.firstChild;\n}\nfunction previousItem(list, item, disableListWrap) {\n  if (list === item) {\n    return disableListWrap ? list.firstChild : list.lastChild;\n  }\n  if (item && item.previousElementSibling) {\n    return item.previousElementSibling;\n  }\n  return disableListWrap ? null : list.lastChild;\n}\nfunction textCriteriaMatches(nextFocus, textCriteria) {\n  if (textCriteria === undefined) {\n    return true;\n  }\n  var text = nextFocus.innerText;\n  if (text === undefined) {\n    // jsdom doesn't support innerText\n    text = nextFocus.textContent;\n  }\n  text = text.trim().toLowerCase();\n  if (text.length === 0) {\n    return false;\n  }\n  if (textCriteria.repeating) {\n    return text[0] === textCriteria.keys[0];\n  }\n  return text.indexOf(textCriteria.keys.join('')) === 0;\n}\nfunction moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, traversalFunction, textCriteria) {\n  var wrappedOnce = false;\n  var nextFocus = traversalFunction(list, currentFocus, currentFocus ? disableListWrap : false);\n  while (nextFocus) {\n    // Prevent infinite loop.\n    if (nextFocus === list.firstChild) {\n      if (wrappedOnce) {\n        return;\n      }\n      wrappedOnce = true;\n    } // Same logic as useAutocomplete.js\n\n    var nextFocusDisabled = disabledItemsFocusable ? false : nextFocus.disabled || nextFocus.getAttribute('aria-disabled') === 'true';\n    if (!nextFocus.hasAttribute('tabindex') || !textCriteriaMatches(nextFocus, textCriteria) || nextFocusDisabled) {\n      // Move to the next element.\n      nextFocus = traversalFunction(list, nextFocus, disableListWrap);\n    } else {\n      nextFocus.focus();\n      return;\n    }\n  }\n}\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * A permanently displayed menu following https://www.w3.org/TR/wai-aria-practices/#menubutton.\n * It's exposed to help customization of the [`Menu`](/api/menu/) component. If you\n * use it separately you need to move focus into the component manually. Once\n * the focus is placed inside the component it is fully keyboard accessible.\n */\n\nvar MenuList = /*#__PURE__*/React.forwardRef(function MenuList(props, ref) {\n  var actions = props.actions,\n    _props$autoFocus = props.autoFocus,\n    autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n    _props$autoFocusItem = props.autoFocusItem,\n    autoFocusItem = _props$autoFocusItem === void 0 ? false : _props$autoFocusItem,\n    children = props.children,\n    className = props.className,\n    _props$disabledItemsF = props.disabledItemsFocusable,\n    disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n    _props$disableListWra = props.disableListWrap,\n    disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n    onKeyDown = props.onKeyDown,\n    _props$variant = props.variant,\n    variant = _props$variant === void 0 ? 'selectedMenu' : _props$variant,\n    other = _objectWithoutProperties(props, [\"actions\", \"autoFocus\", \"autoFocusItem\", \"children\", \"className\", \"disabledItemsFocusable\", \"disableListWrap\", \"onKeyDown\", \"variant\"]);\n  var listRef = React.useRef(null);\n  var textCriteriaRef = React.useRef({\n    keys: [],\n    repeating: true,\n    previousKeyMatched: true,\n    lastTime: null\n  });\n  useEnhancedEffect(function () {\n    if (autoFocus) {\n      listRef.current.focus();\n    }\n  }, [autoFocus]);\n  React.useImperativeHandle(actions, function () {\n    return {\n      adjustStyleForScrollbar: function adjustStyleForScrollbar(containerElement, theme) {\n        // Let's ignore that piece of logic if users are already overriding the width\n        // of the menu.\n        var noExplicitWidth = !listRef.current.style.width;\n        if (containerElement.clientHeight < listRef.current.clientHeight && noExplicitWidth) {\n          var scrollbarSize = \"\".concat(getScrollbarSize(true), \"px\");\n          listRef.current.style[theme.direction === 'rtl' ? 'paddingLeft' : 'paddingRight'] = scrollbarSize;\n          listRef.current.style.width = \"calc(100% + \".concat(scrollbarSize, \")\");\n        }\n        return listRef.current;\n      }\n    };\n  }, []);\n  var handleKeyDown = function handleKeyDown(event) {\n    var list = listRef.current;\n    var key = event.key;\n    /**\n     * @type {Element} - will always be defined since we are in a keydown handler\n     * attached to an element. A keydown event is either dispatched to the activeElement\n     * or document.body or document.documentElement. Only the first case will\n     * trigger this specific handler.\n     */\n\n    var currentFocus = ownerDocument(list).activeElement;\n    if (key === 'ArrowDown') {\n      // Prevent scroll of the page\n      event.preventDefault();\n      moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, nextItem);\n    } else if (key === 'ArrowUp') {\n      event.preventDefault();\n      moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, previousItem);\n    } else if (key === 'Home') {\n      event.preventDefault();\n      moveFocus(list, null, disableListWrap, disabledItemsFocusable, nextItem);\n    } else if (key === 'End') {\n      event.preventDefault();\n      moveFocus(list, null, disableListWrap, disabledItemsFocusable, previousItem);\n    } else if (key.length === 1) {\n      var criteria = textCriteriaRef.current;\n      var lowerKey = key.toLowerCase();\n      var currTime = performance.now();\n      if (criteria.keys.length > 0) {\n        // Reset\n        if (currTime - criteria.lastTime > 500) {\n          criteria.keys = [];\n          criteria.repeating = true;\n          criteria.previousKeyMatched = true;\n        } else if (criteria.repeating && lowerKey !== criteria.keys[0]) {\n          criteria.repeating = false;\n        }\n      }\n      criteria.lastTime = currTime;\n      criteria.keys.push(lowerKey);\n      var keepFocusOnCurrent = currentFocus && !criteria.repeating && textCriteriaMatches(currentFocus, criteria);\n      if (criteria.previousKeyMatched && (keepFocusOnCurrent || moveFocus(list, currentFocus, false, disabledItemsFocusable, nextItem, criteria))) {\n        event.preventDefault();\n      } else {\n        criteria.previousKeyMatched = false;\n      }\n    }\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    listRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(handleOwnRef, ref);\n  /**\n   * the index of the item should receive focus\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\n   * otherwise it's the very first item.\n   */\n\n  var activeItemIndex = -1; // since we inject focus related props into children we have to do a lookahead\n  // to check if there is a `selected` item. We're looking for the last `selected`\n  // item and use the first valid item as a fallback\n\n  React.Children.forEach(children, function (child, index) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    if (!child.props.disabled) {\n      if (variant === 'selectedMenu' && child.props.selected) {\n        activeItemIndex = index;\n      } else if (activeItemIndex === -1) {\n        activeItemIndex = index;\n      }\n    }\n  });\n  var items = React.Children.map(children, function (child, index) {\n    if (index === activeItemIndex) {\n      var newChildProps = {};\n      if (autoFocusItem) {\n        newChildProps.autoFocus = true;\n      }\n      if (child.props.tabIndex === undefined && variant === 'selectedMenu') {\n        newChildProps.tabIndex = 0;\n      }\n      return /*#__PURE__*/React.cloneElement(child, newChildProps);\n    }\n    return child;\n  });\n  return /*#__PURE__*/React.createElement(List, _extends({\n    role: \"menu\",\n    ref: handleRef,\n    className: className,\n    onKeyDown: handleKeyDown,\n    tabIndex: autoFocus ? 0 : -1\n  }, other), items);\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuList.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, will focus the `[role=\"menu\"]` container and move into tab order.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, will focus the first menuitem if `variant=\"menu\"` or selected item\n   * if `variant=\"selectedMenu\"`.\n   */\n  autoFocusItem: PropTypes.bool,\n  /**\n   * MenuList contents, normally `MenuItem`s.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, will allow focus on disabled items.\n   */\n  disabledItemsFocusable: PropTypes.bool,\n  /**\n   * If `true`, the menu items will not wrap focus.\n   */\n  disableListWrap: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus\n   * and the vertical alignment relative to the anchor element.\n   */\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\n} : void 0;\nexport default MenuList;","map":{"version":3,"names":["_extends","_objectWithoutProperties","React","isFragment","PropTypes","ReactDOM","ownerDocument","List","getScrollbarSize","useForkRef","nextItem","list","item","disableListWrap","firstChild","nextElementSibling","previousItem","lastChild","previousElementSibling","textCriteriaMatches","nextFocus","textCriteria","undefined","text","innerText","textContent","trim","toLowerCase","length","repeating","keys","indexOf","join","moveFocus","currentFocus","disabledItemsFocusable","traversalFunction","wrappedOnce","nextFocusDisabled","disabled","getAttribute","hasAttribute","focus","useEnhancedEffect","window","useEffect","useLayoutEffect","MenuList","forwardRef","props","ref","actions","_props$autoFocus","autoFocus","_props$autoFocusItem","autoFocusItem","children","className","_props$disabledItemsF","_props$disableListWra","onKeyDown","_props$variant","variant","other","listRef","useRef","textCriteriaRef","previousKeyMatched","lastTime","current","useImperativeHandle","adjustStyleForScrollbar","containerElement","theme","noExplicitWidth","style","width","clientHeight","scrollbarSize","concat","direction","handleKeyDown","event","key","activeElement","preventDefault","criteria","lowerKey","currTime","performance","now","push","keepFocusOnCurrent","handleOwnRef","useCallback","instance","findDOMNode","handleRef","activeItemIndex","Children","forEach","child","index","isValidElement","process","env","NODE_ENV","console","error","selected","items","map","newChildProps","tabIndex","cloneElement","createElement","role","propTypes","bool","node","string","func","oneOf"],"sources":["/Users/macbook/Desktop/DexcomCGM/client/node_modules/@material-ui/core/esm/MenuList/MenuList.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport ownerDocument from '../utils/ownerDocument';\nimport List from '../List';\nimport getScrollbarSize from '../utils/getScrollbarSize';\nimport useForkRef from '../utils/useForkRef';\n\nfunction nextItem(list, item, disableListWrap) {\n  if (list === item) {\n    return list.firstChild;\n  }\n\n  if (item && item.nextElementSibling) {\n    return item.nextElementSibling;\n  }\n\n  return disableListWrap ? null : list.firstChild;\n}\n\nfunction previousItem(list, item, disableListWrap) {\n  if (list === item) {\n    return disableListWrap ? list.firstChild : list.lastChild;\n  }\n\n  if (item && item.previousElementSibling) {\n    return item.previousElementSibling;\n  }\n\n  return disableListWrap ? null : list.lastChild;\n}\n\nfunction textCriteriaMatches(nextFocus, textCriteria) {\n  if (textCriteria === undefined) {\n    return true;\n  }\n\n  var text = nextFocus.innerText;\n\n  if (text === undefined) {\n    // jsdom doesn't support innerText\n    text = nextFocus.textContent;\n  }\n\n  text = text.trim().toLowerCase();\n\n  if (text.length === 0) {\n    return false;\n  }\n\n  if (textCriteria.repeating) {\n    return text[0] === textCriteria.keys[0];\n  }\n\n  return text.indexOf(textCriteria.keys.join('')) === 0;\n}\n\nfunction moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, traversalFunction, textCriteria) {\n  var wrappedOnce = false;\n  var nextFocus = traversalFunction(list, currentFocus, currentFocus ? disableListWrap : false);\n\n  while (nextFocus) {\n    // Prevent infinite loop.\n    if (nextFocus === list.firstChild) {\n      if (wrappedOnce) {\n        return;\n      }\n\n      wrappedOnce = true;\n    } // Same logic as useAutocomplete.js\n\n\n    var nextFocusDisabled = disabledItemsFocusable ? false : nextFocus.disabled || nextFocus.getAttribute('aria-disabled') === 'true';\n\n    if (!nextFocus.hasAttribute('tabindex') || !textCriteriaMatches(nextFocus, textCriteria) || nextFocusDisabled) {\n      // Move to the next element.\n      nextFocus = traversalFunction(list, nextFocus, disableListWrap);\n    } else {\n      nextFocus.focus();\n      return;\n    }\n  }\n}\n\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * A permanently displayed menu following https://www.w3.org/TR/wai-aria-practices/#menubutton.\n * It's exposed to help customization of the [`Menu`](/api/menu/) component. If you\n * use it separately you need to move focus into the component manually. Once\n * the focus is placed inside the component it is fully keyboard accessible.\n */\n\nvar MenuList = /*#__PURE__*/React.forwardRef(function MenuList(props, ref) {\n  var actions = props.actions,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      _props$autoFocusItem = props.autoFocusItem,\n      autoFocusItem = _props$autoFocusItem === void 0 ? false : _props$autoFocusItem,\n      children = props.children,\n      className = props.className,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      onKeyDown = props.onKeyDown,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'selectedMenu' : _props$variant,\n      other = _objectWithoutProperties(props, [\"actions\", \"autoFocus\", \"autoFocusItem\", \"children\", \"className\", \"disabledItemsFocusable\", \"disableListWrap\", \"onKeyDown\", \"variant\"]);\n\n  var listRef = React.useRef(null);\n  var textCriteriaRef = React.useRef({\n    keys: [],\n    repeating: true,\n    previousKeyMatched: true,\n    lastTime: null\n  });\n  useEnhancedEffect(function () {\n    if (autoFocus) {\n      listRef.current.focus();\n    }\n  }, [autoFocus]);\n  React.useImperativeHandle(actions, function () {\n    return {\n      adjustStyleForScrollbar: function adjustStyleForScrollbar(containerElement, theme) {\n        // Let's ignore that piece of logic if users are already overriding the width\n        // of the menu.\n        var noExplicitWidth = !listRef.current.style.width;\n\n        if (containerElement.clientHeight < listRef.current.clientHeight && noExplicitWidth) {\n          var scrollbarSize = \"\".concat(getScrollbarSize(true), \"px\");\n          listRef.current.style[theme.direction === 'rtl' ? 'paddingLeft' : 'paddingRight'] = scrollbarSize;\n          listRef.current.style.width = \"calc(100% + \".concat(scrollbarSize, \")\");\n        }\n\n        return listRef.current;\n      }\n    };\n  }, []);\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var list = listRef.current;\n    var key = event.key;\n    /**\n     * @type {Element} - will always be defined since we are in a keydown handler\n     * attached to an element. A keydown event is either dispatched to the activeElement\n     * or document.body or document.documentElement. Only the first case will\n     * trigger this specific handler.\n     */\n\n    var currentFocus = ownerDocument(list).activeElement;\n\n    if (key === 'ArrowDown') {\n      // Prevent scroll of the page\n      event.preventDefault();\n      moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, nextItem);\n    } else if (key === 'ArrowUp') {\n      event.preventDefault();\n      moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, previousItem);\n    } else if (key === 'Home') {\n      event.preventDefault();\n      moveFocus(list, null, disableListWrap, disabledItemsFocusable, nextItem);\n    } else if (key === 'End') {\n      event.preventDefault();\n      moveFocus(list, null, disableListWrap, disabledItemsFocusable, previousItem);\n    } else if (key.length === 1) {\n      var criteria = textCriteriaRef.current;\n      var lowerKey = key.toLowerCase();\n      var currTime = performance.now();\n\n      if (criteria.keys.length > 0) {\n        // Reset\n        if (currTime - criteria.lastTime > 500) {\n          criteria.keys = [];\n          criteria.repeating = true;\n          criteria.previousKeyMatched = true;\n        } else if (criteria.repeating && lowerKey !== criteria.keys[0]) {\n          criteria.repeating = false;\n        }\n      }\n\n      criteria.lastTime = currTime;\n      criteria.keys.push(lowerKey);\n      var keepFocusOnCurrent = currentFocus && !criteria.repeating && textCriteriaMatches(currentFocus, criteria);\n\n      if (criteria.previousKeyMatched && (keepFocusOnCurrent || moveFocus(list, currentFocus, false, disabledItemsFocusable, nextItem, criteria))) {\n        event.preventDefault();\n      } else {\n        criteria.previousKeyMatched = false;\n      }\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    listRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(handleOwnRef, ref);\n  /**\n   * the index of the item should receive focus\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\n   * otherwise it's the very first item.\n   */\n\n  var activeItemIndex = -1; // since we inject focus related props into children we have to do a lookahead\n  // to check if there is a `selected` item. We're looking for the last `selected`\n  // item and use the first valid item as a fallback\n\n  React.Children.forEach(children, function (child, index) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    if (!child.props.disabled) {\n      if (variant === 'selectedMenu' && child.props.selected) {\n        activeItemIndex = index;\n      } else if (activeItemIndex === -1) {\n        activeItemIndex = index;\n      }\n    }\n  });\n  var items = React.Children.map(children, function (child, index) {\n    if (index === activeItemIndex) {\n      var newChildProps = {};\n\n      if (autoFocusItem) {\n        newChildProps.autoFocus = true;\n      }\n\n      if (child.props.tabIndex === undefined && variant === 'selectedMenu') {\n        newChildProps.tabIndex = 0;\n      }\n\n      return /*#__PURE__*/React.cloneElement(child, newChildProps);\n    }\n\n    return child;\n  });\n  return /*#__PURE__*/React.createElement(List, _extends({\n    role: \"menu\",\n    ref: handleRef,\n    className: className,\n    onKeyDown: handleKeyDown,\n    tabIndex: autoFocus ? 0 : -1\n  }, other), items);\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuList.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, will focus the `[role=\"menu\"]` container and move into tab order.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, will focus the first menuitem if `variant=\"menu\"` or selected item\n   * if `variant=\"selectedMenu\"`.\n   */\n  autoFocusItem: PropTypes.bool,\n\n  /**\n   * MenuList contents, normally `MenuItem`s.\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the menu items will not wrap focus.\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus\n   * and the vertical alignment relative to the anchor element.\n   */\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\n} : void 0;\nexport default MenuList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}