{"ast":null,"code":"import React from'react';import AppControl from'./AppControl';import Dexcom from'./Dexcom';import'../App.css';import{jsx as _jsx}from\"react/jsx-runtime\";class DexcomControl extends React.Component{constructor(props){super(props);this.handleDexcomLogin=()=>{this.setState({dexcomLoggedIn:true});};this.state={dexcomLoggedIn:false};}render(){let currentlyVisibleState=null;if(window.location.search!==\"\"){currentlyVisibleState=/*#__PURE__*/_jsx(AppControl,{onLogIn:this.handleDexcomLogin});}else if(window.location.search===\"\"){let authorizationCode=window.location.search;currentlyVisibleState=/*#__PURE__*/_jsx(Dexcom,{code:authorizationCode});}return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(\"div\",{children:currentlyVisibleState})});}}export default DexcomControl;","map":{"version":3,"names":["React","AppControl","Dexcom","jsx","_jsx","DexcomControl","Component","constructor","props","handleDexcomLogin","setState","dexcomLoggedIn","state","render","currentlyVisibleState","window","location","search","onLogIn","authorizationCode","code","Fragment","children"],"sources":["/Users/macbook/Desktop/DexcomCGM/src/components/DexcomControl.js"],"sourcesContent":["import React from 'react';\nimport AppControl from './AppControl';\nimport Dexcom from './Dexcom';\nimport '../App.css';\n\nclass DexcomControl extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dexcomLoggedIn: false\n        };\n    }\n\n    handleDexcomLogin = () => {\n        this.setState({ dexcomLoggedIn: true });\n    }\n\n    render() {\n        let currentlyVisibleState = null;\n\n        if (window.location.search !== \"\") {\n            currentlyVisibleState = <AppControl onLogIn={this.handleDexcomLogin} />\n        } else if (window.location.search === \"\") {\n            let authorizationCode = window.location.search;\n            currentlyVisibleState =\n                <Dexcom code={authorizationCode} />\n        }\n\n        return (\n            <React.Fragment>\n                <div>\n                    {currentlyVisibleState}\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default DexcomControl;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,UAAU,KAAM,cAAc,CACrC,MAAO,CAAAC,MAAM,KAAM,UAAU,CAC7B,MAAO,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEpB,KAAM,CAAAC,aAAa,QAAS,CAAAL,KAAK,CAACM,SAAU,CAExCC,WAAWA,CAACC,KAAK,CAAE,CACf,KAAK,CAACA,KAAK,CAAC,CAAC,KAMjBC,iBAAiB,CAAG,IAAM,CACtB,IAAI,CAACC,QAAQ,CAAC,CAAEC,cAAc,CAAE,IAAK,CAAC,CAAC,CAC3C,CAAC,CAPG,IAAI,CAACC,KAAK,CAAG,CACTD,cAAc,CAAE,KACpB,CAAC,CACL,CAMAE,MAAMA,CAAA,CAAG,CACL,GAAI,CAAAC,qBAAqB,CAAG,IAAI,CAEhC,GAAIC,MAAM,CAACC,QAAQ,CAACC,MAAM,GAAK,EAAE,CAAE,CAC/BH,qBAAqB,cAAGV,IAAA,CAACH,UAAU,EAACiB,OAAO,CAAE,IAAI,CAACT,iBAAkB,CAAE,CAAC,CAC3E,CAAC,IAAM,IAAIM,MAAM,CAACC,QAAQ,CAACC,MAAM,GAAK,EAAE,CAAE,CACtC,GAAI,CAAAE,iBAAiB,CAAGJ,MAAM,CAACC,QAAQ,CAACC,MAAM,CAC9CH,qBAAqB,cACjBV,IAAA,CAACF,MAAM,EAACkB,IAAI,CAAED,iBAAkB,CAAE,CAAC,CAC3C,CAEA,mBACIf,IAAA,CAACJ,KAAK,CAACqB,QAAQ,EAAAC,QAAA,cACXlB,IAAA,QAAAkB,QAAA,CACKR,qBAAqB,CACrB,CAAC,CACM,CAAC,CAEzB,CACJ,CAEA,cAAe,CAAAT,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}