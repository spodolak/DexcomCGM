{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/DexcomCGM/src/components/Calibrate.js\";\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport { Form, InputGroup } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calibrate(props) {\n  const {\n    onSwitchingViews,\n    alertCheck,\n    onCalibrate\n  } = props;\n  const submitCalibrate = () => {\n    onSwitchingViews('');\n    alertCheck();\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"calibrate\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          class: \"update\",\n          children: \"Enter Blood Sugar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          size: \"lg\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            classType: \"text-center\",\n            type: \"calibrate\",\n            placeholder: \"mg/dL\",\n            onChange: onCalibrate,\n            style: {\n              margin: \"auto\",\n              minWidth: \"300px\",\n              maxWidth: \"400px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: [\"1. Wash and dry your hands \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 52\n          }, this), \"2. Take a fingerstick with your meter\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 52\n          }, this), \"3. Promptly enter the exact value from your meter\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 64\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"outline\",\n        onClick: () => submitCalibrate(),\n        type: \"submit\",\n        children: \"Calibrate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_c = Calibrate;\nCalibrate.propTypes = {\n  onSwitchingViews: PropTypes.func,\n  onCalibrate: PropTypes.func\n};\nexport default Calibrate;\nvar _c;\n$RefreshReg$(_c, \"Calibrate\");","map":{"version":3,"names":["React","PropTypes","Form","InputGroup","jsxDEV","_jsxDEV","Calibrate","props","onSwitchingViews","alertCheck","onCalibrate","submitCalibrate","Fragment","children","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","class","size","Control","classType","type","placeholder","onChange","style","margin","minWidth","maxWidth","Text","className","onClick","_c","propTypes","func","$RefreshReg$"],"sources":["/Users/macbook/Desktop/DexcomCGM/src/components/Calibrate.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { Form, InputGroup } from 'react-bootstrap';\n\nfunction Calibrate(props) {\n    const { onSwitchingViews, alertCheck, onCalibrate } = props;\n\n    const submitCalibrate = () => {\n        onSwitchingViews('');\n        alertCheck();\n    }\n\n    return (\n        <React.Fragment>\n            <Form>\n                <Form.Group controlId=\"calibrate\">\n                    <Form.Label></Form.Label>\n                    <h1 class=\"update\">Enter Blood Sugar</h1>\n                    <br></br>\n                    <InputGroup size=\"lg\">\n                        <Form.Control\n                            classType=\"text-center\"\n                            type=\"calibrate\"\n                            placeholder=\"mg/dL\"\n                            onChange={onCalibrate}\n                            style={{ margin: \"auto\", minWidth: \"300px\", maxWidth: \"400px\" }}\n                        />\n                    </InputGroup>\n                    <Form.Text className=\"text-muted\">\n                        1. Wash and dry your hands <br></br>\n              2. Take a fingerstick with your meter<br></br>\n              3. Promptly enter the exact value from your meter<br></br>\n                    </Form.Text>\n                </Form.Group>\n                <button className=\"outline\" onClick={() => submitCalibrate()} type=\"submit\">\n                    Calibrate\n          </button>\n            </Form>\n        </React.Fragment>\n    )\n}\n\nCalibrate.propTypes = {\n    onSwitchingViews: PropTypes.func,\n    onCalibrate: PropTypes.func\n}\n\n\nexport default Calibrate;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,IAAI,EAAEC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,SAASA,CAACC,KAAK,EAAE;EACtB,MAAM;IAAEC,gBAAgB;IAAEC,UAAU;IAAEC;EAAY,CAAC,GAAGH,KAAK;EAE3D,MAAMI,eAAe,GAAGA,CAAA,KAAM;IAC1BH,gBAAgB,CAAC,EAAE,CAAC;IACpBC,UAAU,CAAC,CAAC;EAChB,CAAC;EAED,oBACIJ,OAAA,CAACL,KAAK,CAACY,QAAQ;IAAAC,QAAA,eACXR,OAAA,CAACH,IAAI;MAAAW,QAAA,gBACDR,OAAA,CAACH,IAAI,CAACY,KAAK;QAACC,SAAS,EAAC,WAAW;QAAAF,QAAA,gBAC7BR,OAAA,CAACH,IAAI,CAACc,KAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eACzBf,OAAA;UAAIgB,KAAK,EAAC,QAAQ;UAAAR,QAAA,EAAC;QAAiB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzCf,OAAA;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTf,OAAA,CAACF,UAAU;UAACmB,IAAI,EAAC,IAAI;UAAAT,QAAA,eACjBR,OAAA,CAACH,IAAI,CAACqB,OAAO;YACTC,SAAS,EAAC,aAAa;YACvBC,IAAI,EAAC,WAAW;YAChBC,WAAW,EAAC,OAAO;YACnBC,QAAQ,EAAEjB,WAAY;YACtBkB,KAAK,EAAE;cAAEC,MAAM,EAAE,MAAM;cAAEC,QAAQ,EAAE,OAAO;cAAEC,QAAQ,EAAE;YAAQ;UAAE;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM,CAAC,eACbf,OAAA,CAACH,IAAI,CAAC8B,IAAI;UAACC,SAAS,EAAC,YAAY;UAAApB,QAAA,GAAC,6BACH,eAAAR,OAAA;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,yCACT,eAAAf,OAAA;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,qDACG,eAAAf,OAAA;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACbf,OAAA;QAAQ4B,SAAS,EAAC,SAAS;QAACC,OAAO,EAAEA,CAAA,KAAMvB,eAAe,CAAC,CAAE;QAACc,IAAI,EAAC,QAAQ;QAAAZ,QAAA,EAAC;MAElF;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEzB;AAACe,EAAA,GApCQ7B,SAAS;AAsClBA,SAAS,CAAC8B,SAAS,GAAG;EAClB5B,gBAAgB,EAAEP,SAAS,CAACoC,IAAI;EAChC3B,WAAW,EAAET,SAAS,CAACoC;AAC3B,CAAC;AAGD,eAAe/B,SAAS;AAAC,IAAA6B,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}