{"ast":null,"code":"import hyphenate from 'hyphenate-style-name';\n\n/**\n * Convert camel cased property names to dash separated.\n */\n\nfunction convertCase(style) {\n  var converted = {};\n  for (var prop in style) {\n    var key = prop.indexOf('--') === 0 ? prop : hyphenate(prop);\n    converted[key] = style[prop];\n  }\n  if (style.fallbacks) {\n    if (Array.isArray(style.fallbacks)) converted.fallbacks = style.fallbacks.map(convertCase);else converted.fallbacks = convertCase(style.fallbacks);\n  }\n  return converted;\n}\n/**\n * Allow camel cased property names by converting them back to dasherized.\n */\n\nfunction camelCase() {\n  function onProcessStyle(style) {\n    if (Array.isArray(style)) {\n      // Handle rules like @font-face, which can have multiple styles in an array\n      for (var index = 0; index < style.length; index++) {\n        style[index] = convertCase(style[index]);\n      }\n      return style;\n    }\n    return convertCase(style);\n  }\n  function onChangeValue(value, prop, rule) {\n    if (prop.indexOf('--') === 0) {\n      return value;\n    }\n    var hyphenatedProp = hyphenate(prop); // There was no camel case in place\n\n    if (prop === hyphenatedProp) return value;\n    rule.prop(hyphenatedProp, value); // Core will ignore that property value we set the proper one above.\n\n    return null;\n  }\n  return {\n    onProcessStyle: onProcessStyle,\n    onChangeValue: onChangeValue\n  };\n}\nexport default camelCase;","map":{"version":3,"names":["hyphenate","convertCase","style","converted","prop","key","indexOf","fallbacks","Array","isArray","map","camelCase","onProcessStyle","index","length","onChangeValue","value","rule","hyphenatedProp"],"sources":["/Users/macbook/Desktop/DexcomCGM/node_modules/jss-plugin-camel-case/dist/jss-plugin-camel-case.esm.js"],"sourcesContent":["import hyphenate from 'hyphenate-style-name';\n\n/**\n * Convert camel cased property names to dash separated.\n */\n\nfunction convertCase(style) {\n  var converted = {};\n\n  for (var prop in style) {\n    var key = prop.indexOf('--') === 0 ? prop : hyphenate(prop);\n    converted[key] = style[prop];\n  }\n\n  if (style.fallbacks) {\n    if (Array.isArray(style.fallbacks)) converted.fallbacks = style.fallbacks.map(convertCase);else converted.fallbacks = convertCase(style.fallbacks);\n  }\n\n  return converted;\n}\n/**\n * Allow camel cased property names by converting them back to dasherized.\n */\n\n\nfunction camelCase() {\n  function onProcessStyle(style) {\n    if (Array.isArray(style)) {\n      // Handle rules like @font-face, which can have multiple styles in an array\n      for (var index = 0; index < style.length; index++) {\n        style[index] = convertCase(style[index]);\n      }\n\n      return style;\n    }\n\n    return convertCase(style);\n  }\n\n  function onChangeValue(value, prop, rule) {\n    if (prop.indexOf('--') === 0) {\n      return value;\n    }\n\n    var hyphenatedProp = hyphenate(prop); // There was no camel case in place\n\n    if (prop === hyphenatedProp) return value;\n    rule.prop(hyphenatedProp, value); // Core will ignore that property value we set the proper one above.\n\n    return null;\n  }\n\n  return {\n    onProcessStyle: onProcessStyle,\n    onChangeValue: onChangeValue\n  };\n}\n\nexport default camelCase;\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,sBAAsB;;AAE5C;AACA;AACA;;AAEA,SAASC,WAAWA,CAACC,KAAK,EAAE;EAC1B,IAAIC,SAAS,GAAG,CAAC,CAAC;EAElB,KAAK,IAAIC,IAAI,IAAIF,KAAK,EAAE;IACtB,IAAIG,GAAG,GAAGD,IAAI,CAACE,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAGF,IAAI,GAAGJ,SAAS,CAACI,IAAI,CAAC;IAC3DD,SAAS,CAACE,GAAG,CAAC,GAAGH,KAAK,CAACE,IAAI,CAAC;EAC9B;EAEA,IAAIF,KAAK,CAACK,SAAS,EAAE;IACnB,IAAIC,KAAK,CAACC,OAAO,CAACP,KAAK,CAACK,SAAS,CAAC,EAAEJ,SAAS,CAACI,SAAS,GAAGL,KAAK,CAACK,SAAS,CAACG,GAAG,CAACT,WAAW,CAAC,CAAC,KAAKE,SAAS,CAACI,SAAS,GAAGN,WAAW,CAACC,KAAK,CAACK,SAAS,CAAC;EACpJ;EAEA,OAAOJ,SAAS;AAClB;AACA;AACA;AACA;;AAGA,SAASQ,SAASA,CAAA,EAAG;EACnB,SAASC,cAAcA,CAACV,KAAK,EAAE;IAC7B,IAAIM,KAAK,CAACC,OAAO,CAACP,KAAK,CAAC,EAAE;MACxB;MACA,KAAK,IAAIW,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGX,KAAK,CAACY,MAAM,EAAED,KAAK,EAAE,EAAE;QACjDX,KAAK,CAACW,KAAK,CAAC,GAAGZ,WAAW,CAACC,KAAK,CAACW,KAAK,CAAC,CAAC;MAC1C;MAEA,OAAOX,KAAK;IACd;IAEA,OAAOD,WAAW,CAACC,KAAK,CAAC;EAC3B;EAEA,SAASa,aAAaA,CAACC,KAAK,EAAEZ,IAAI,EAAEa,IAAI,EAAE;IACxC,IAAIb,IAAI,CAACE,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;MAC5B,OAAOU,KAAK;IACd;IAEA,IAAIE,cAAc,GAAGlB,SAAS,CAACI,IAAI,CAAC,CAAC,CAAC;;IAEtC,IAAIA,IAAI,KAAKc,cAAc,EAAE,OAAOF,KAAK;IACzCC,IAAI,CAACb,IAAI,CAACc,cAAc,EAAEF,KAAK,CAAC,CAAC,CAAC;;IAElC,OAAO,IAAI;EACb;EAEA,OAAO;IACLJ,cAAc,EAAEA,cAAc;IAC9BG,aAAa,EAAEA;EACjB,CAAC;AACH;AAEA,eAAeJ,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}