{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { getThemeProps, useTheme } from '@material-ui/styles';\nimport { elementAcceptingRef, HTMLElementType } from '@material-ui/utils';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport ownerDocument from '../utils/ownerDocument';\nimport Portal from '../Portal';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport zIndex from '../styles/zIndex';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport TrapFocus from '../Unstable_TrapFocus';\nimport SimpleBackdrop from './SimpleBackdrop';\nfunction getContainer(container) {\n  container = typeof container === 'function' ? container() : container;\n  return ReactDOM.findDOMNode(container);\n}\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\nvar defaultManager = new ModalManager();\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'fixed',\n      zIndex: theme.zIndex.modal,\n      right: 0,\n      bottom: 0,\n      top: 0,\n      left: 0\n    },\n    /* Styles applied to the root element if the `Modal` has exited. */\n    hidden: {\n      visibility: 'hidden'\n    }\n  };\n};\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/api/dialog/)\n * - [Drawer](/api/drawer/)\n * - [Menu](/api/menu/)\n * - [Popover](/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nvar Modal = /*#__PURE__*/React.forwardRef(function Modal(inProps, ref) {\n  var theme = useTheme();\n  var props = getThemeProps({\n    name: 'MuiModal',\n    props: _extends({}, inProps),\n    theme: theme\n  });\n  var _props$BackdropCompon = props.BackdropComponent,\n    BackdropComponent = _props$BackdropCompon === void 0 ? SimpleBackdrop : _props$BackdropCompon,\n    BackdropProps = props.BackdropProps,\n    children = props.children,\n    _props$closeAfterTran = props.closeAfterTransition,\n    closeAfterTransition = _props$closeAfterTran === void 0 ? false : _props$closeAfterTran,\n    container = props.container,\n    _props$disableAutoFoc = props.disableAutoFocus,\n    disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n    _props$disableBackdro = props.disableBackdropClick,\n    disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n    _props$disableEnforce = props.disableEnforceFocus,\n    disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n    _props$disableEscapeK = props.disableEscapeKeyDown,\n    disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n    _props$disablePortal = props.disablePortal,\n    disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n    _props$disableRestore = props.disableRestoreFocus,\n    disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n    _props$disableScrollL = props.disableScrollLock,\n    disableScrollLock = _props$disableScrollL === void 0 ? false : _props$disableScrollL,\n    _props$hideBackdrop = props.hideBackdrop,\n    hideBackdrop = _props$hideBackdrop === void 0 ? false : _props$hideBackdrop,\n    _props$keepMounted = props.keepMounted,\n    keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted,\n    _props$manager = props.manager,\n    manager = _props$manager === void 0 ? defaultManager : _props$manager,\n    onBackdropClick = props.onBackdropClick,\n    onClose = props.onClose,\n    onEscapeKeyDown = props.onEscapeKeyDown,\n    onRendered = props.onRendered,\n    open = props.open,\n    other = _objectWithoutProperties(props, [\"BackdropComponent\", \"BackdropProps\", \"children\", \"closeAfterTransition\", \"container\", \"disableAutoFocus\", \"disableBackdropClick\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onEscapeKeyDown\", \"onRendered\", \"open\"]);\n  var _React$useState = React.useState(true),\n    exited = _React$useState[0],\n    setExited = _React$useState[1];\n  var modal = React.useRef({});\n  var mountNodeRef = React.useRef(null);\n  var modalRef = React.useRef(null);\n  var handleRef = useForkRef(modalRef, ref);\n  var hasTransition = getHasTransition(props);\n  var getDoc = function getDoc() {\n    return ownerDocument(mountNodeRef.current);\n  };\n  var getModal = function getModal() {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n  var handleMounted = function handleMounted() {\n    manager.mount(getModal(), {\n      disableScrollLock: disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    modalRef.current.scrollTop = 0;\n  };\n  var handleOpen = useEventCallback(function () {\n    var resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  var isTopModal = React.useCallback(function () {\n    return manager.isTopModal(getModal());\n  }, [manager]);\n  var handlePortalRef = useEventCallback(function (node) {\n    mountNodeRef.current = node;\n    if (!node) {\n      return;\n    }\n    if (onRendered) {\n      onRendered();\n    }\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, true);\n    }\n  });\n  var handleClose = React.useCallback(function () {\n    manager.remove(getModal());\n  }, [manager]);\n  React.useEffect(function () {\n    return function () {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(function () {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n  var handleExited = function handleExited() {\n    setExited(true);\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n  var handleBackdropClick = function handleBackdropClick(event) {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n  var handleKeyDown = function handleKeyDown(event) {\n    // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviours like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n    if (onEscapeKeyDown) {\n      onEscapeKeyDown(event);\n    }\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n  var inlineStyle = styles(theme || {\n    zIndex: zIndex\n  });\n  var childProps = {};\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = children.props.tabIndex || '-1';\n  } // It's a Transition like component\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n  return /*#__PURE__*/React.createElement(Portal, {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: handleRef,\n    onKeyDown: handleKeyDown,\n    role: \"presentation\"\n  }, other, {\n    style: _extends({}, inlineStyle.root, !open && exited ? inlineStyle.hidden : {}, other.style)\n  }), hideBackdrop ? null : /*#__PURE__*/React.createElement(BackdropComponent, _extends({\n    open: open,\n    onClick: handleBackdropClick\n  }, BackdropProps)), /*#__PURE__*/React.createElement(TrapFocus, {\n    disableEnforceFocus: disableEnforceFocus,\n    disableAutoFocus: disableAutoFocus,\n    disableRestoreFocus: disableRestoreFocus,\n    getDoc: getDoc,\n    isEnabled: isTopModal,\n    open: open\n  }, /*#__PURE__*/React.cloneElement(children, childProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes = {\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   */\n  BackdropComponent: PropTypes.elementType,\n  /**\n   * Props applied to the [`Backdrop`](/api/backdrop/) element.\n   */\n  BackdropProps: PropTypes.object,\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   */\n  closeAfterTransition: PropTypes.bool,\n  /**\n   * A HTML element, component instance, or function that returns either.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.instanceOf(React.Component), PropTypes.func]),\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableAutoFocus: PropTypes.bool,\n  /**\n   * If `true`, clicking the backdrop will not fire `onClose`.\n   */\n  disableBackdropClick: deprecatedPropType(PropTypes.bool, 'Use the onClose prop with the `reason` argument to filter the `backdropClick` events.'),\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableEnforceFocus: PropTypes.bool,\n  /**\n   * If `true`, hitting escape will not fire `onClose`.\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden.\n   */\n  disableRestoreFocus: PropTypes.bool,\n  /**\n   * Disable the scroll lock behavior.\n   */\n  disableScrollLock: PropTypes.bool,\n  /**\n   * If `true`, the backdrop is not rendered.\n   */\n  hideBackdrop: PropTypes.bool,\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   */\n  keepMounted: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  manager: PropTypes.object,\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: deprecatedPropType(PropTypes.func, 'Use the onClose prop with the `reason` argument to handle the `backdropClick` events.'),\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableEscapeKeyDown` is false and the modal is in focus.\n   */\n  onEscapeKeyDown: deprecatedPropType(PropTypes.func, 'Use the onClose prop with the `reason` argument to handle the `escapeKeyDown` events.'),\n  /**\n   * Callback fired once the children has been mounted into the `container`.\n   * It signals that the `open={true}` prop took effect.\n   *\n   * This prop will be removed in v5, the ref can be used instead.\n   */\n  onRendered: deprecatedPropType(PropTypes.func, 'Use the ref instead.'),\n  /**\n   * If `true`, the modal is open.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default Modal;","map":{"version":3,"names":["_objectWithoutProperties","_extends","React","ReactDOM","PropTypes","getThemeProps","useTheme","elementAcceptingRef","HTMLElementType","deprecatedPropType","ownerDocument","Portal","createChainedFunction","useForkRef","useEventCallback","zIndex","ModalManager","ariaHidden","TrapFocus","SimpleBackdrop","getContainer","container","findDOMNode","getHasTransition","props","children","hasOwnProperty","defaultManager","styles","theme","root","position","modal","right","bottom","top","left","hidden","visibility","Modal","forwardRef","inProps","ref","name","_props$BackdropCompon","BackdropComponent","BackdropProps","_props$closeAfterTran","closeAfterTransition","_props$disableAutoFoc","disableAutoFocus","_props$disableBackdro","disableBackdropClick","_props$disableEnforce","disableEnforceFocus","_props$disableEscapeK","disableEscapeKeyDown","_props$disablePortal","disablePortal","_props$disableRestore","disableRestoreFocus","_props$disableScrollL","disableScrollLock","_props$hideBackdrop","hideBackdrop","_props$keepMounted","keepMounted","_props$manager","manager","onBackdropClick","onClose","onEscapeKeyDown","onRendered","open","other","_React$useState","useState","exited","setExited","useRef","mountNodeRef","modalRef","handleRef","hasTransition","getDoc","current","getModal","mountNode","handleMounted","mount","scrollTop","handleOpen","resolvedContainer","body","add","isTopModal","useCallback","handlePortalRef","node","handleClose","remove","useEffect","handleEnter","handleExited","handleBackdropClick","event","target","currentTarget","handleKeyDown","key","stopPropagation","inlineStyle","childProps","tabIndex","undefined","onEnter","onExited","createElement","onKeyDown","role","style","onClick","isEnabled","cloneElement","process","env","NODE_ENV","propTypes","elementType","object","isRequired","bool","oneOfType","instanceOf","Component","func"],"sources":["/Users/macbook/Desktop/DexcomCGM/client/node_modules/@material-ui/core/esm/Modal/Modal.js"],"sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { getThemeProps, useTheme } from '@material-ui/styles';\nimport { elementAcceptingRef, HTMLElementType } from '@material-ui/utils';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport ownerDocument from '../utils/ownerDocument';\nimport Portal from '../Portal';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport zIndex from '../styles/zIndex';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport TrapFocus from '../Unstable_TrapFocus';\nimport SimpleBackdrop from './SimpleBackdrop';\n\nfunction getContainer(container) {\n  container = typeof container === 'function' ? container() : container;\n  return ReactDOM.findDOMNode(container);\n}\n\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\n\nvar defaultManager = new ModalManager();\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'fixed',\n      zIndex: theme.zIndex.modal,\n      right: 0,\n      bottom: 0,\n      top: 0,\n      left: 0\n    },\n\n    /* Styles applied to the root element if the `Modal` has exited. */\n    hidden: {\n      visibility: 'hidden'\n    }\n  };\n};\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/api/dialog/)\n * - [Drawer](/api/drawer/)\n * - [Menu](/api/menu/)\n * - [Popover](/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nvar Modal = /*#__PURE__*/React.forwardRef(function Modal(inProps, ref) {\n  var theme = useTheme();\n  var props = getThemeProps({\n    name: 'MuiModal',\n    props: _extends({}, inProps),\n    theme: theme\n  });\n\n  var _props$BackdropCompon = props.BackdropComponent,\n      BackdropComponent = _props$BackdropCompon === void 0 ? SimpleBackdrop : _props$BackdropCompon,\n      BackdropProps = props.BackdropProps,\n      children = props.children,\n      _props$closeAfterTran = props.closeAfterTransition,\n      closeAfterTransition = _props$closeAfterTran === void 0 ? false : _props$closeAfterTran,\n      container = props.container,\n      _props$disableAutoFoc = props.disableAutoFocus,\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$disableBackdro = props.disableBackdropClick,\n      disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableEnforce = props.disableEnforceFocus,\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n      _props$disableEscapeK = props.disableEscapeKeyDown,\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      _props$disableRestore = props.disableRestoreFocus,\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n      _props$disableScrollL = props.disableScrollLock,\n      disableScrollLock = _props$disableScrollL === void 0 ? false : _props$disableScrollL,\n      _props$hideBackdrop = props.hideBackdrop,\n      hideBackdrop = _props$hideBackdrop === void 0 ? false : _props$hideBackdrop,\n      _props$keepMounted = props.keepMounted,\n      keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted,\n      _props$manager = props.manager,\n      manager = _props$manager === void 0 ? defaultManager : _props$manager,\n      onBackdropClick = props.onBackdropClick,\n      onClose = props.onClose,\n      onEscapeKeyDown = props.onEscapeKeyDown,\n      onRendered = props.onRendered,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"BackdropComponent\", \"BackdropProps\", \"children\", \"closeAfterTransition\", \"container\", \"disableAutoFocus\", \"disableBackdropClick\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onEscapeKeyDown\", \"onRendered\", \"open\"]);\n\n  var _React$useState = React.useState(true),\n      exited = _React$useState[0],\n      setExited = _React$useState[1];\n\n  var modal = React.useRef({});\n  var mountNodeRef = React.useRef(null);\n  var modalRef = React.useRef(null);\n  var handleRef = useForkRef(modalRef, ref);\n  var hasTransition = getHasTransition(props);\n\n  var getDoc = function getDoc() {\n    return ownerDocument(mountNodeRef.current);\n  };\n\n  var getModal = function getModal() {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n\n  var handleMounted = function handleMounted() {\n    manager.mount(getModal(), {\n      disableScrollLock: disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    modalRef.current.scrollTop = 0;\n  };\n\n  var handleOpen = useEventCallback(function () {\n    var resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  var isTopModal = React.useCallback(function () {\n    return manager.isTopModal(getModal());\n  }, [manager]);\n  var handlePortalRef = useEventCallback(function (node) {\n    mountNodeRef.current = node;\n\n    if (!node) {\n      return;\n    }\n\n    if (onRendered) {\n      onRendered();\n    }\n\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, true);\n    }\n  });\n  var handleClose = React.useCallback(function () {\n    manager.remove(getModal());\n  }, [manager]);\n  React.useEffect(function () {\n    return function () {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(function () {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n\n  var handleBackdropClick = function handleBackdropClick(event) {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviours like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n\n    if (onEscapeKeyDown) {\n      onEscapeKeyDown(event);\n    }\n\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n\n  var inlineStyle = styles(theme || {\n    zIndex: zIndex\n  });\n  var childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = children.props.tabIndex || '-1';\n  } // It's a Transition like component\n\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n\n  return /*#__PURE__*/React.createElement(Portal, {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: handleRef,\n    onKeyDown: handleKeyDown,\n    role: \"presentation\"\n  }, other, {\n    style: _extends({}, inlineStyle.root, !open && exited ? inlineStyle.hidden : {}, other.style)\n  }), hideBackdrop ? null : /*#__PURE__*/React.createElement(BackdropComponent, _extends({\n    open: open,\n    onClick: handleBackdropClick\n  }, BackdropProps)), /*#__PURE__*/React.createElement(TrapFocus, {\n    disableEnforceFocus: disableEnforceFocus,\n    disableAutoFocus: disableAutoFocus,\n    disableRestoreFocus: disableRestoreFocus,\n    getDoc: getDoc,\n    isEnabled: isTopModal,\n    open: open\n  }, /*#__PURE__*/React.cloneElement(children, childProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes = {\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Backdrop`](/api/backdrop/) element.\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * A HTML element, component instance, or function that returns either.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.instanceOf(React.Component), PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, clicking the backdrop will not fire `onClose`.\n   */\n  disableBackdropClick: deprecatedPropType(PropTypes.bool, 'Use the onClose prop with the `reason` argument to filter the `backdropClick` events.'),\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire `onClose`.\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden.\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Disable the scroll lock behavior.\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  manager: PropTypes.object,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: deprecatedPropType(PropTypes.func, 'Use the onClose prop with the `reason` argument to handle the `backdropClick` events.'),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableEscapeKeyDown` is false and the modal is in focus.\n   */\n  onEscapeKeyDown: deprecatedPropType(PropTypes.func, 'Use the onClose prop with the `reason` argument to handle the `escapeKeyDown` events.'),\n\n  /**\n   * Callback fired once the children has been mounted into the `container`.\n   * It signals that the `open={true}` prop took effect.\n   *\n   * This prop will be removed in v5, the ref can be used instead.\n   */\n  onRendered: deprecatedPropType(PropTypes.func, 'Use the ref instead.'),\n\n  /**\n   * If `true`, the modal is open.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default Modal;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}