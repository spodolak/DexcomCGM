{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@material-ui/utils';\nvar useEnhancedEffect = typeof window !== 'undefined' && process.env.NODE_ENV !== 'test' ? React.useLayoutEffect : React.useEffect;\n/**\n * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).\n *\n * This component can be useful in a variety of situations:\n * - Escape hatch for broken dependencies not supporting SSR.\n * - Improve the time-to-first paint on the client by only rendering above the fold.\n * - Reduce the rendering time on the server.\n * - Under too heavy server load, you can turn on service degradation.\n */\n\nfunction NoSsr(props) {\n  var children = props.children,\n    _props$defer = props.defer,\n    defer = _props$defer === void 0 ? false : _props$defer,\n    _props$fallback = props.fallback,\n    fallback = _props$fallback === void 0 ? null : _props$fallback;\n  var _React$useState = React.useState(false),\n    mountedState = _React$useState[0],\n    setMountedState = _React$useState[1];\n  useEnhancedEffect(function () {\n    if (!defer) {\n      setMountedState(true);\n    }\n  }, [defer]);\n  React.useEffect(function () {\n    if (defer) {\n      setMountedState(true);\n    }\n  }, [defer]); // We need the Fragment here to force react-docgen to recognise NoSsr as a component.\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, mountedState ? children : fallback);\n}\nprocess.env.NODE_ENV !== \"production\" ? NoSsr.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n  /**\n   * If `true`, the component will not only prevent server-side rendering.\n   * It will also defer the rendering of the children into a different screen frame.\n   */\n  defer: PropTypes.bool,\n  /**\n   * The fallback content to display.\n   */\n  fallback: PropTypes.node\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  NoSsr['propTypes' + ''] = exactProp(NoSsr.propTypes);\n}\nexport default NoSsr;","map":{"version":3,"names":["React","PropTypes","exactProp","useEnhancedEffect","window","process","env","NODE_ENV","useLayoutEffect","useEffect","NoSsr","props","children","_props$defer","defer","_props$fallback","fallback","_React$useState","useState","mountedState","setMountedState","createElement","Fragment","propTypes","node","bool"],"sources":["/Users/macbook/Desktop/DexcomCGM/node_modules/@material-ui/core/esm/NoSsr/NoSsr.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@material-ui/utils';\nvar useEnhancedEffect = typeof window !== 'undefined' && process.env.NODE_ENV !== 'test' ? React.useLayoutEffect : React.useEffect;\n/**\n * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).\n *\n * This component can be useful in a variety of situations:\n * - Escape hatch for broken dependencies not supporting SSR.\n * - Improve the time-to-first paint on the client by only rendering above the fold.\n * - Reduce the rendering time on the server.\n * - Under too heavy server load, you can turn on service degradation.\n */\n\nfunction NoSsr(props) {\n  var children = props.children,\n      _props$defer = props.defer,\n      defer = _props$defer === void 0 ? false : _props$defer,\n      _props$fallback = props.fallback,\n      fallback = _props$fallback === void 0 ? null : _props$fallback;\n\n  var _React$useState = React.useState(false),\n      mountedState = _React$useState[0],\n      setMountedState = _React$useState[1];\n\n  useEnhancedEffect(function () {\n    if (!defer) {\n      setMountedState(true);\n    }\n  }, [defer]);\n  React.useEffect(function () {\n    if (defer) {\n      setMountedState(true);\n    }\n  }, [defer]); // We need the Fragment here to force react-docgen to recognise NoSsr as a component.\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, mountedState ? children : fallback);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? NoSsr.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * If `true`, the component will not only prevent server-side rendering.\n   * It will also defer the rendering of the children into a different screen frame.\n   */\n  defer: PropTypes.bool,\n\n  /**\n   * The fallback content to display.\n   */\n  fallback: PropTypes.node\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  NoSsr['propTypes' + ''] = exactProp(NoSsr.propTypes);\n}\n\nexport default NoSsr;"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,IAAIC,iBAAiB,GAAG,OAAOC,MAAM,KAAK,WAAW,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,MAAM,GAAGP,KAAK,CAACQ,eAAe,GAAGR,KAAK,CAACS,SAAS;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,KAAKA,CAACC,KAAK,EAAE;EACpB,IAAIC,QAAQ,GAAGD,KAAK,CAACC,QAAQ;IACzBC,YAAY,GAAGF,KAAK,CAACG,KAAK;IAC1BA,KAAK,GAAGD,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,YAAY;IACtDE,eAAe,GAAGJ,KAAK,CAACK,QAAQ;IAChCA,QAAQ,GAAGD,eAAe,KAAK,KAAK,CAAC,GAAG,IAAI,GAAGA,eAAe;EAElE,IAAIE,eAAe,GAAGjB,KAAK,CAACkB,QAAQ,CAAC,KAAK,CAAC;IACvCC,YAAY,GAAGF,eAAe,CAAC,CAAC,CAAC;IACjCG,eAAe,GAAGH,eAAe,CAAC,CAAC,CAAC;EAExCd,iBAAiB,CAAC,YAAY;IAC5B,IAAI,CAACW,KAAK,EAAE;MACVM,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;EACXd,KAAK,CAACS,SAAS,CAAC,YAAY;IAC1B,IAAIK,KAAK,EAAE;MACTM,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb,OAAO,aAAad,KAAK,CAACqB,aAAa,CAACrB,KAAK,CAACsB,QAAQ,EAAE,IAAI,EAAEH,YAAY,GAAGP,QAAQ,GAAGI,QAAQ,CAAC;AACnG;AAEAX,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGG,KAAK,CAACa,SAAS,GAAG;EACxD;EACA;EACA;EACA;;EAEA;AACF;AACA;EACEX,QAAQ,EAAEX,SAAS,CAACuB,IAAI;EAExB;AACF;AACA;AACA;EACEV,KAAK,EAAEb,SAAS,CAACwB,IAAI;EAErB;AACF;AACA;EACET,QAAQ,EAAEf,SAAS,CAACuB;AACtB,CAAC,GAAG,KAAK,CAAC;AAEV,IAAInB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzC;EACAG,KAAK,CAAC,WAAW,GAAG,EAAE,CAAC,GAAGR,SAAS,CAACQ,KAAK,CAACa,SAAS,CAAC;AACtD;AAEA,eAAeb,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}