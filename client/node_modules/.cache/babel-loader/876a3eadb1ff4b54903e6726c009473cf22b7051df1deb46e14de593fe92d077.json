{"ast":null,"code":"import contains from 'dom-helpers/contains';\nimport listen from 'dom-helpers/listen';\nimport { useCallback, useEffect, useRef } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport warning from 'warning';\nimport ownerDocument from './ownerDocument';\nvar escapeKeyCode = 27;\nvar noop = function noop() {};\nfunction isLeftClickEvent(event) {\n  return event.button === 0;\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nvar getRefTarget = function getRefTarget(ref) {\n  return ref && ('current' in ref ? ref.current : ref);\n};\n\n/**\n * The `useRootClose` hook registers your callback on the document\n * when rendered. Powers the `<Overlay/>` component. This is used achieve modal\n * style behavior where your callback is triggered when the user tries to\n * interact with the rest of the document or hits the `esc` key.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onRootClose\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */\nfunction useRootClose(ref, onRootClose, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    disabled = _ref.disabled,\n    _ref$clickTrigger = _ref.clickTrigger,\n    clickTrigger = _ref$clickTrigger === void 0 ? 'click' : _ref$clickTrigger;\n  var preventMouseRootCloseRef = useRef(false);\n  var onClose = onRootClose || noop;\n  var handleMouseCapture = useCallback(function (e) {\n    var _e$composedPath$;\n    var currentTarget = getRefTarget(ref);\n    warning(!!currentTarget, 'RootClose captured a close event but does not have a ref to compare it to. ' + 'useRootClose(), should be passed a ref that resolves to a DOM node');\n    preventMouseRootCloseRef.current = !currentTarget || isModifiedEvent(e) || !isLeftClickEvent(e) || !!contains(currentTarget, (_e$composedPath$ = e.composedPath == null ? void 0 : e.composedPath()[0]) != null ? _e$composedPath$ : e.target);\n  }, [ref]);\n  var handleMouse = useEventCallback(function (e) {\n    if (!preventMouseRootCloseRef.current) {\n      onClose(e);\n    }\n  });\n  var handleKeyUp = useEventCallback(function (e) {\n    if (e.keyCode === escapeKeyCode) {\n      onClose(e);\n    }\n  });\n  useEffect(function () {\n    if (disabled || ref == null) return undefined; // Store the current event to avoid triggering handlers immediately\n    // https://github.com/facebook/react/issues/20074\n\n    var currentEvent = window.event;\n    var doc = ownerDocument(getRefTarget(ref)); // Use capture for this listener so it fires before React's listener, to\n    // avoid false positives in the contains() check below if the target DOM\n    // element is removed in the React mouse callback.\n\n    var removeMouseCaptureListener = listen(doc, clickTrigger, handleMouseCapture, true);\n    var removeMouseListener = listen(doc, clickTrigger, function (e) {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n      handleMouse(e);\n    });\n    var removeKeyupListener = listen(doc, 'keyup', function (e) {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n      handleKeyUp(e);\n    });\n    var mobileSafariHackListeners = [];\n    if ('ontouchstart' in doc.documentElement) {\n      mobileSafariHackListeners = [].slice.call(doc.body.children).map(function (el) {\n        return listen(el, 'mousemove', noop);\n      });\n    }\n    return function () {\n      removeMouseCaptureListener();\n      removeMouseListener();\n      removeKeyupListener();\n      mobileSafariHackListeners.forEach(function (remove) {\n        return remove();\n      });\n    };\n  }, [ref, disabled, clickTrigger, handleMouseCapture, handleMouse, handleKeyUp]);\n}\nexport default useRootClose;","map":{"version":3,"names":["contains","listen","useCallback","useEffect","useRef","useEventCallback","warning","ownerDocument","escapeKeyCode","noop","isLeftClickEvent","event","button","isModifiedEvent","metaKey","altKey","ctrlKey","shiftKey","getRefTarget","ref","current","useRootClose","onRootClose","_temp","_ref","disabled","_ref$clickTrigger","clickTrigger","preventMouseRootCloseRef","onClose","handleMouseCapture","e","_e$composedPath$","currentTarget","composedPath","target","handleMouse","handleKeyUp","keyCode","undefined","currentEvent","window","doc","removeMouseCaptureListener","removeMouseListener","removeKeyupListener","mobileSafariHackListeners","documentElement","slice","call","body","children","map","el","forEach","remove"],"sources":["/Users/macbook/Desktop/DexcomCGM/node_modules/react-overlays/esm/useRootClose.js"],"sourcesContent":["import contains from 'dom-helpers/contains';\nimport listen from 'dom-helpers/listen';\nimport { useCallback, useEffect, useRef } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport warning from 'warning';\nimport ownerDocument from './ownerDocument';\nvar escapeKeyCode = 27;\n\nvar noop = function noop() {};\n\nfunction isLeftClickEvent(event) {\n  return event.button === 0;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nvar getRefTarget = function getRefTarget(ref) {\n  return ref && ('current' in ref ? ref.current : ref);\n};\n\n/**\n * The `useRootClose` hook registers your callback on the document\n * when rendered. Powers the `<Overlay/>` component. This is used achieve modal\n * style behavior where your callback is triggered when the user tries to\n * interact with the rest of the document or hits the `esc` key.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onRootClose\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */\nfunction useRootClose(ref, onRootClose, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      disabled = _ref.disabled,\n      _ref$clickTrigger = _ref.clickTrigger,\n      clickTrigger = _ref$clickTrigger === void 0 ? 'click' : _ref$clickTrigger;\n\n  var preventMouseRootCloseRef = useRef(false);\n  var onClose = onRootClose || noop;\n  var handleMouseCapture = useCallback(function (e) {\n    var _e$composedPath$;\n\n    var currentTarget = getRefTarget(ref);\n    warning(!!currentTarget, 'RootClose captured a close event but does not have a ref to compare it to. ' + 'useRootClose(), should be passed a ref that resolves to a DOM node');\n    preventMouseRootCloseRef.current = !currentTarget || isModifiedEvent(e) || !isLeftClickEvent(e) || !!contains(currentTarget, (_e$composedPath$ = e.composedPath == null ? void 0 : e.composedPath()[0]) != null ? _e$composedPath$ : e.target);\n  }, [ref]);\n  var handleMouse = useEventCallback(function (e) {\n    if (!preventMouseRootCloseRef.current) {\n      onClose(e);\n    }\n  });\n  var handleKeyUp = useEventCallback(function (e) {\n    if (e.keyCode === escapeKeyCode) {\n      onClose(e);\n    }\n  });\n  useEffect(function () {\n    if (disabled || ref == null) return undefined; // Store the current event to avoid triggering handlers immediately\n    // https://github.com/facebook/react/issues/20074\n\n    var currentEvent = window.event;\n    var doc = ownerDocument(getRefTarget(ref)); // Use capture for this listener so it fires before React's listener, to\n    // avoid false positives in the contains() check below if the target DOM\n    // element is removed in the React mouse callback.\n\n    var removeMouseCaptureListener = listen(doc, clickTrigger, handleMouseCapture, true);\n    var removeMouseListener = listen(doc, clickTrigger, function (e) {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n\n      handleMouse(e);\n    });\n    var removeKeyupListener = listen(doc, 'keyup', function (e) {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n\n      handleKeyUp(e);\n    });\n    var mobileSafariHackListeners = [];\n\n    if ('ontouchstart' in doc.documentElement) {\n      mobileSafariHackListeners = [].slice.call(doc.body.children).map(function (el) {\n        return listen(el, 'mousemove', noop);\n      });\n    }\n\n    return function () {\n      removeMouseCaptureListener();\n      removeMouseListener();\n      removeKeyupListener();\n      mobileSafariHackListeners.forEach(function (remove) {\n        return remove();\n      });\n    };\n  }, [ref, disabled, clickTrigger, handleMouseCapture, handleMouse, handleKeyUp]);\n}\n\nexport default useRootClose;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}