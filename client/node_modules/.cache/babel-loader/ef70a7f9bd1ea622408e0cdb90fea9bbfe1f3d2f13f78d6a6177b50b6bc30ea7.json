{"ast":null,"code":"import React from'react';import{Form,Row}from'react-bootstrap';import{useState}from'react';import firebase from'../firebase.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function AddSymptom(props){const[thirsty]=useState(false);const[frequentUrination]=useState(false);const[irritable,setIrritable]=useState(false);const[blurryVision]=useState(false);const[headache]=useState(false);const[sleepy,setSleepy]=useState(false);const[sweaty,setSweaty]=useState(false);const[shaky,setShaky]=useState(false);const[hungry,setHungry]=useState(false);const[dizzy,setDizzy]=useState(false);const onIrritableCheck=()=>{setIrritable(!irritable);};const onSleepyCheck=()=>{setSleepy(!sleepy);};const onSweatyCheck=()=>{setSweaty(!sweaty);};const onShakyCheck=()=>{setShaky(!shaky);};const onHungryCheck=()=>{setHungry(!hungry);};const onDizzyCheck=()=>{setDizzy(!dizzy);};const fetchFirestoreSymptoms=async()=>{const data=await firebase.firestore().collection('symptoms').doc('log').get().then(value=>{return value.data();});return data;};const firebasePostSymptom=async()=>{const timeStamp=new Date().getTime();const currentSymptom={[timeStamp]:{timeStamp:new Date(),symptoms:{thirsty,frequentUrination,irritable,blurryVision,headache,sleepy,sweaty,shaky,hungry,dizzy}}};const data=await fetchFirestoreSymptoms();firebase.firestore().collection('symptoms').doc('log').update({symptoms:[...data.symptoms,currentSymptom]});};const onSubmit=()=>{props.onSwitchingViews('');firebasePostSymptom();};return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Your blood sugar is \",/*#__PURE__*/_jsx(\"span\",{id:\"low-text\",children:\"LOW\"})]}),/*#__PURE__*/_jsx(\"h1\",{children:\"How do you feel?\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(Form,{children:[['checkbox'].map(type=>/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3 ml-4\",children:[/*#__PURE__*/_jsxs(Row,{className:\"justify-content-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cc-selector\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"sweaty\",type:\"checkbox\",value:\"sweaty\",onChange:onSweatyCheck}),/*#__PURE__*/_jsx(\"label\",{className:\"drinkcard-cc sweaty\",for:\"sweaty\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"cc-selector\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"shaky\",type:\"checkbox\",value:\"shaky\",onChange:onShakyCheck}),/*#__PURE__*/_jsx(\"label\",{className:\"drinkcard-cc shaky\",for:\"shaky\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"cc-selector\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"irritable\",type:\"checkbox\",value:\"irritable\",onChange:onIrritableCheck}),/*#__PURE__*/_jsx(\"label\",{className:\"drinkcard-cc irritable\",for:\"irritable\"})]})]}),/*#__PURE__*/_jsxs(Row,{className:\"justify-content-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cc-selector\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"hungry\",type:\"checkbox\",value:\"hungry\",onChange:onHungryCheck}),/*#__PURE__*/_jsx(\"label\",{className:\"drinkcard-cc hungry\",for:\"hungry\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"cc-selector\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"dizzy\",type:\"checkbox\",value:\"dizzy\",onChange:onDizzyCheck}),/*#__PURE__*/_jsx(\"label\",{className:\"drinkcard-cc dizzy\",for:\"dizzy\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"cc-selector\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"sleepy\",type:\"checkbox\",value:\"sleepy\",onChange:onSleepyCheck}),/*#__PURE__*/_jsx(\"label\",{className:\"drinkcard-cc sleepy\",for:\"sleepy\"})]})]})]},\"inline-\".concat(type))),/*#__PURE__*/_jsx(Row,{className:\"justify-content-center\",children:/*#__PURE__*/_jsx(\"button\",{class:\"outline\",type:\"submit\",onClick:()=>onSubmit(),children:\"Log\"})})]})]});}export default AddSymptom;","map":{"version":3,"names":["React","Form","Row","useState","firebase","jsx","_jsx","jsxs","_jsxs","AddSymptom","props","thirsty","frequentUrination","irritable","setIrritable","blurryVision","headache","sleepy","setSleepy","sweaty","setSweaty","shaky","setShaky","hungry","setHungry","dizzy","setDizzy","onIrritableCheck","onSleepyCheck","onSweatyCheck","onShakyCheck","onHungryCheck","onDizzyCheck","fetchFirestoreSymptoms","data","firestore","collection","doc","get","then","value","firebasePostSymptom","timeStamp","Date","getTime","currentSymptom","symptoms","update","onSubmit","onSwitchingViews","Fragment","children","id","map","type","className","onChange","for","concat","class","onClick"],"sources":["/Users/macbook/Desktop/DexcomCGM/src/components/AddLowSymptom.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { Form, Row } from 'react-bootstrap';\nimport { useState } from 'react';\nimport firebase from '../firebase.js'\n\nfunction AddSymptom(props) {\n    const [thirsty] = useState(false);\n    const [frequentUrination] = useState(false);\n    const [irritable, setIrritable] = useState(false);\n    const [blurryVision] = useState(false);\n    const [headache] = useState(false);\n    const [sleepy, setSleepy] = useState(false);\n    const [sweaty, setSweaty] = useState(false);\n    const [shaky, setShaky] = useState(false);\n    const [hungry, setHungry] = useState(false);\n    const [dizzy, setDizzy] = useState(false);\n\n    const onIrritableCheck = () => {\n        setIrritable(!irritable)\n    }\n    const onSleepyCheck = () => {\n        setSleepy(!sleepy)\n    }\n    const onSweatyCheck = () => {\n        setSweaty(!sweaty)\n    }\n    const onShakyCheck = () => {\n        setShaky(!shaky)\n    }\n    const onHungryCheck = () => {\n        setHungry(!hungry)\n    }\n    const onDizzyCheck = () => {\n        setDizzy(!dizzy)\n    }\n\n    const fetchFirestoreSymptoms = async () => {\n        const data = await firebase.firestore().collection('symptoms').doc('log').get()\n            .then(value => { return value.data() })\n        return data;\n    }\n\n    const firebasePostSymptom = async () => {\n        const timeStamp = new Date().getTime()\n        const currentSymptom = {\n            [timeStamp]: {\n                timeStamp: new Date(),\n                symptoms: {\n                    thirsty,\n                    frequentUrination,\n                    irritable,\n                    blurryVision,\n                    headache,\n                    sleepy,\n                    sweaty,\n                    shaky,\n                    hungry,\n                    dizzy,\n                }\n            }\n        }\n        const data = await fetchFirestoreSymptoms();\n        firebase.firestore().collection('symptoms').doc('log').update({ symptoms: [...data.symptoms, currentSymptom] });\n    }\n\n    const onSubmit = () => {\n        props.onSwitchingViews('');\n        firebasePostSymptom()\n    }\n\n    return (\n        <React.Fragment>\n            <h1>Your blood sugar is <span id=\"low-text\">LOW</span></h1>\n            <h1>How do you feel?</h1>\n            <br></br>\n            <Form>\n                {['checkbox'].map((type) => (\n                    <div key={`inline-${type}`} className=\"mb-3 ml-4\">\n                        <Row className=\"justify-content-center\">\n                            <div className=\"cc-selector\">\n                                <input id=\"sweaty\" type=\"checkbox\" value=\"sweaty\" onChange={onSweatyCheck} />\n                                <label className=\"drinkcard-cc sweaty\" for=\"sweaty\"></label>\n                            </div>\n                            <div className=\"cc-selector\">\n                                <input id=\"shaky\" type=\"checkbox\" value=\"shaky\" onChange={onShakyCheck} />\n                                <label className=\"drinkcard-cc shaky\" for=\"shaky\"></label>\n                            </div>\n                            <div className=\"cc-selector\">\n                                <input id=\"irritable\" type=\"checkbox\" value=\"irritable\" onChange={onIrritableCheck} />\n                                <label className=\"drinkcard-cc irritable\" for=\"irritable\"></label>\n                            </div>\n                        </Row>\n                        <Row className=\"justify-content-center\">\n                            <div className=\"cc-selector\">\n                                <input id=\"hungry\" type=\"checkbox\" value=\"hungry\" onChange={onHungryCheck} />\n                                <label className=\"drinkcard-cc hungry\" for=\"hungry\"></label>\n                            </div>\n                            <div className=\"cc-selector\">\n                                <input id=\"dizzy\" type=\"checkbox\" value=\"dizzy\" onChange={onDizzyCheck} />\n                                <label className=\"drinkcard-cc dizzy\" for=\"dizzy\"></label>\n                            </div>\n                            <div className=\"cc-selector\">\n                                <input id=\"sleepy\" type=\"checkbox\" value=\"sleepy\" onChange={onSleepyCheck} />\n                                <label className=\"drinkcard-cc sleepy\" for=\"sleepy\"></label>\n                            </div>\n                        </Row>\n                    </div>\n                ))}\n                <Row className=\"justify-content-center\">\n                    <button class=\"outline\" type=\"submit\" onClick={() => onSubmit()}>\n                        Log\n        </button>\n                </Row>\n            </Form>\n        </React.Fragment>\n    )\n}\n\nAddSymptom.propTypes = {\n    onSwitchingViews: PropTypes.func\n}\n\n\nexport default AddSymptom;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}