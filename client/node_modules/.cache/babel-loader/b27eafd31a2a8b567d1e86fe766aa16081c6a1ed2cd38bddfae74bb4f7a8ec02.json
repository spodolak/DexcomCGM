{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/unstable_useId';\nvar RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  var actions = props.actions,\n    children = props.children,\n    nameProp = props.name,\n    valueProp = props.value,\n    onChange = props.onChange,\n    other = _objectWithoutProperties(props, [\"actions\", \"children\", \"name\", \"value\", \"onChange\"]);\n  var rootRef = React.useRef(null);\n  var _useControlled = useControlled({\n      controlled: valueProp,\n      default: props.defaultValue,\n      name: 'RadioGroup'\n    }),\n    _useControlled2 = _slicedToArray(_useControlled, 2),\n    value = _useControlled2[0],\n    setValue = _useControlled2[1];\n  React.useImperativeHandle(actions, function () {\n    return {\n      focus: function focus() {\n        var input = rootRef.current.querySelector('input:not(:disabled):checked');\n        if (!input) {\n          input = rootRef.current.querySelector('input:not(:disabled)');\n        }\n        if (input) {\n          input.focus();\n        }\n      }\n    };\n  }, []);\n  var handleRef = useForkRef(ref, rootRef);\n  var handleChange = function handleChange(event) {\n    setValue(event.target.value);\n    if (onChange) {\n      onChange(event, event.target.value);\n    }\n  };\n  var name = useId(nameProp);\n  return /*#__PURE__*/React.createElement(RadioGroupContext.Provider, {\n    value: {\n      name: name,\n      onChange: handleChange,\n      value: value\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, _extends({\n    role: \"radiogroup\",\n    ref: handleRef\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string]),\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","map":{"version":3,"names":["_extends","_slicedToArray","_objectWithoutProperties","React","PropTypes","FormGroup","useForkRef","useControlled","RadioGroupContext","useId","RadioGroup","forwardRef","props","ref","actions","children","nameProp","name","valueProp","value","onChange","other","rootRef","useRef","_useControlled","controlled","default","defaultValue","_useControlled2","setValue","useImperativeHandle","focus","input","current","querySelector","handleRef","handleChange","event","target","createElement","Provider","role","process","env","NODE_ENV","propTypes","node","oneOfType","arrayOf","string","number","func","any"],"sources":["/Users/macbook/Desktop/DexcomCGM/node_modules/@material-ui/core/esm/RadioGroup/RadioGroup.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/unstable_useId';\nvar RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  var actions = props.actions,\n      children = props.children,\n      nameProp = props.name,\n      valueProp = props.value,\n      onChange = props.onChange,\n      other = _objectWithoutProperties(props, [\"actions\", \"children\", \"name\", \"value\", \"onChange\"]);\n\n  var rootRef = React.useRef(null);\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: props.defaultValue,\n    name: 'RadioGroup'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1];\n\n  React.useImperativeHandle(actions, function () {\n    return {\n      focus: function focus() {\n        var input = rootRef.current.querySelector('input:not(:disabled):checked');\n\n        if (!input) {\n          input = rootRef.current.querySelector('input:not(:disabled)');\n        }\n\n        if (input) {\n          input.focus();\n        }\n      }\n    };\n  }, []);\n  var handleRef = useForkRef(ref, rootRef);\n\n  var handleChange = function handleChange(event) {\n    setValue(event.target.value);\n\n    if (onChange) {\n      onChange(event, event.target.value);\n    }\n  };\n\n  var name = useId(nameProp);\n  return /*#__PURE__*/React.createElement(RadioGroupContext.Provider, {\n    value: {\n      name: name,\n      onChange: handleChange,\n      value: value\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, _extends({\n    role: \"radiogroup\",\n    ref: handleRef\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string]),\n\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,cAAc,MAAM,0CAA0C;AACrE,OAAOC,wBAAwB,MAAM,oDAAoD;AACzF,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,SAAS,MAAM,cAAc;AACpC,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,aAAa,MAAM,wBAAwB;AAClD,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,IAAIC,UAAU,GAAG,aAAaP,KAAK,CAACQ,UAAU,CAAC,SAASD,UAAUA,CAACE,KAAK,EAAEC,GAAG,EAAE;EAC7E,IAAIC,OAAO,GAAGF,KAAK,CAACE,OAAO;IACvBC,QAAQ,GAAGH,KAAK,CAACG,QAAQ;IACzBC,QAAQ,GAAGJ,KAAK,CAACK,IAAI;IACrBC,SAAS,GAAGN,KAAK,CAACO,KAAK;IACvBC,QAAQ,GAAGR,KAAK,CAACQ,QAAQ;IACzBC,KAAK,GAAGnB,wBAAwB,CAACU,KAAK,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;EAEjG,IAAIU,OAAO,GAAGnB,KAAK,CAACoB,MAAM,CAAC,IAAI,CAAC;EAEhC,IAAIC,cAAc,GAAGjB,aAAa,CAAC;MACjCkB,UAAU,EAAEP,SAAS;MACrBQ,OAAO,EAAEd,KAAK,CAACe,YAAY;MAC3BV,IAAI,EAAE;IACR,CAAC,CAAC;IACEW,eAAe,GAAG3B,cAAc,CAACuB,cAAc,EAAE,CAAC,CAAC;IACnDL,KAAK,GAAGS,eAAe,CAAC,CAAC,CAAC;IAC1BC,QAAQ,GAAGD,eAAe,CAAC,CAAC,CAAC;EAEjCzB,KAAK,CAAC2B,mBAAmB,CAAChB,OAAO,EAAE,YAAY;IAC7C,OAAO;MACLiB,KAAK,EAAE,SAASA,KAAKA,CAAA,EAAG;QACtB,IAAIC,KAAK,GAAGV,OAAO,CAACW,OAAO,CAACC,aAAa,CAAC,8BAA8B,CAAC;QAEzE,IAAI,CAACF,KAAK,EAAE;UACVA,KAAK,GAAGV,OAAO,CAACW,OAAO,CAACC,aAAa,CAAC,sBAAsB,CAAC;QAC/D;QAEA,IAAIF,KAAK,EAAE;UACTA,KAAK,CAACD,KAAK,CAAC,CAAC;QACf;MACF;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACN,IAAII,SAAS,GAAG7B,UAAU,CAACO,GAAG,EAAES,OAAO,CAAC;EAExC,IAAIc,YAAY,GAAG,SAASA,YAAYA,CAACC,KAAK,EAAE;IAC9CR,QAAQ,CAACQ,KAAK,CAACC,MAAM,CAACnB,KAAK,CAAC;IAE5B,IAAIC,QAAQ,EAAE;MACZA,QAAQ,CAACiB,KAAK,EAAEA,KAAK,CAACC,MAAM,CAACnB,KAAK,CAAC;IACrC;EACF,CAAC;EAED,IAAIF,IAAI,GAAGR,KAAK,CAACO,QAAQ,CAAC;EAC1B,OAAO,aAAab,KAAK,CAACoC,aAAa,CAAC/B,iBAAiB,CAACgC,QAAQ,EAAE;IAClErB,KAAK,EAAE;MACLF,IAAI,EAAEA,IAAI;MACVG,QAAQ,EAAEgB,YAAY;MACtBjB,KAAK,EAAEA;IACT;EACF,CAAC,EAAE,aAAahB,KAAK,CAACoC,aAAa,CAAClC,SAAS,EAAEL,QAAQ,CAAC;IACtDyC,IAAI,EAAE,YAAY;IAClB5B,GAAG,EAAEsB;EACP,CAAC,EAAEd,KAAK,CAAC,EAAEN,QAAQ,CAAC,CAAC;AACvB,CAAC,CAAC;AACF2B,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGlC,UAAU,CAACmC,SAAS,GAAG;EAC7D;EACA;EACA;EACA;;EAEA;AACF;AACA;EACE9B,QAAQ,EAAEX,SAAS,CAAC0C,IAAI;EAExB;AACF;AACA;EACEnB,YAAY,EAAEvB,SAAS,CAAC2C,SAAS,CAAC,CAAC3C,SAAS,CAAC4C,OAAO,CAAC5C,SAAS,CAAC6C,MAAM,CAAC,EAAE7C,SAAS,CAAC8C,MAAM,EAAE9C,SAAS,CAAC6C,MAAM,CAAC,CAAC;EAE5G;AACF;AACA;AACA;EACEhC,IAAI,EAAEb,SAAS,CAAC6C,MAAM;EAEtB;AACF;AACA;AACA;AACA;AACA;EACE7B,QAAQ,EAAEhB,SAAS,CAAC+C,IAAI;EAExB;AACF;AACA;EACEhC,KAAK,EAAEf,SAAS,CAACgD;AACnB,CAAC,GAAG,KAAK,CAAC;AACV,eAAe1C,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}