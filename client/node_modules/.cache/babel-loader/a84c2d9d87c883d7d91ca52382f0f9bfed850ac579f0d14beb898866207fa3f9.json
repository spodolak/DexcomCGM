{"ast":null,"code":"import nested from '../ThemeProvider/nested';\n/**\n * This is the list of the style rule name we use as drop in replacement for the built-in\n * pseudo classes (:checked, :disabled, :focused, etc.).\n *\n * Why do they exist in the first place?\n * These classes are used at a specificity of 2.\n * It allows them to override previously definied styles as well as\n * being untouched by simple user overrides.\n */\n\nvar pseudoClasses = ['checked', 'disabled', 'error', 'focused', 'focusVisible', 'required', 'expanded', 'selected']; // Returns a function which generates unique class names based on counters.\n// When new generator function is created, rule counter is reset.\n// We need to reset the rule counter for SSR for each request.\n//\n// It's inspired by\n// https://github.com/cssinjs/jss/blob/4e6a05dd3f7b6572fdd3ab216861d9e446c20331/src/utils/createGenerateClassName.js\n\nexport default function createGenerateClassName() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _options$disableGloba = options.disableGlobal,\n    disableGlobal = _options$disableGloba === void 0 ? false : _options$disableGloba,\n    _options$productionPr = options.productionPrefix,\n    productionPrefix = _options$productionPr === void 0 ? 'jss' : _options$productionPr,\n    _options$seed = options.seed,\n    seed = _options$seed === void 0 ? '' : _options$seed;\n  var seedPrefix = seed === '' ? '' : \"\".concat(seed, \"-\");\n  var ruleCounter = 0;\n  var getNextCounterId = function getNextCounterId() {\n    ruleCounter += 1;\n    if (process.env.NODE_ENV !== 'production') {\n      if (ruleCounter >= 1e10) {\n        console.warn(['Material-UI: You might have a memory leak.', 'The ruleCounter is not supposed to grow that much.'].join(''));\n      }\n    }\n    return ruleCounter;\n  };\n  return function (rule, styleSheet) {\n    var name = styleSheet.options.name; // Is a global static MUI style?\n\n    if (name && name.indexOf('Mui') === 0 && !styleSheet.options.link && !disableGlobal) {\n      // We can use a shorthand class name, we never use the keys to style the components.\n      if (pseudoClasses.indexOf(rule.key) !== -1) {\n        return \"Mui-\".concat(rule.key);\n      }\n      var prefix = \"\".concat(seedPrefix).concat(name, \"-\").concat(rule.key);\n      if (!styleSheet.options.theme[nested] || seed !== '') {\n        return prefix;\n      }\n      return \"\".concat(prefix, \"-\").concat(getNextCounterId());\n    }\n    if (process.env.NODE_ENV === 'production') {\n      return \"\".concat(seedPrefix).concat(productionPrefix).concat(getNextCounterId());\n    }\n    var suffix = \"\".concat(rule.key, \"-\").concat(getNextCounterId()); // Help with debuggability.\n\n    if (styleSheet.options.classNamePrefix) {\n      return \"\".concat(seedPrefix).concat(styleSheet.options.classNamePrefix, \"-\").concat(suffix);\n    }\n    return \"\".concat(seedPrefix).concat(suffix);\n  };\n}","map":{"version":3,"names":["nested","pseudoClasses","createGenerateClassName","options","arguments","length","undefined","_options$disableGloba","disableGlobal","_options$productionPr","productionPrefix","_options$seed","seed","seedPrefix","concat","ruleCounter","getNextCounterId","process","env","NODE_ENV","console","warn","join","rule","styleSheet","name","indexOf","link","key","prefix","theme","suffix","classNamePrefix"],"sources":["/Users/macbook/Desktop/DexcomCGM/client/node_modules/@material-ui/styles/esm/createGenerateClassName/createGenerateClassName.js"],"sourcesContent":["import nested from '../ThemeProvider/nested';\n/**\n * This is the list of the style rule name we use as drop in replacement for the built-in\n * pseudo classes (:checked, :disabled, :focused, etc.).\n *\n * Why do they exist in the first place?\n * These classes are used at a specificity of 2.\n * It allows them to override previously definied styles as well as\n * being untouched by simple user overrides.\n */\n\nvar pseudoClasses = ['checked', 'disabled', 'error', 'focused', 'focusVisible', 'required', 'expanded', 'selected']; // Returns a function which generates unique class names based on counters.\n// When new generator function is created, rule counter is reset.\n// We need to reset the rule counter for SSR for each request.\n//\n// It's inspired by\n// https://github.com/cssinjs/jss/blob/4e6a05dd3f7b6572fdd3ab216861d9e446c20331/src/utils/createGenerateClassName.js\n\nexport default function createGenerateClassName() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _options$disableGloba = options.disableGlobal,\n      disableGlobal = _options$disableGloba === void 0 ? false : _options$disableGloba,\n      _options$productionPr = options.productionPrefix,\n      productionPrefix = _options$productionPr === void 0 ? 'jss' : _options$productionPr,\n      _options$seed = options.seed,\n      seed = _options$seed === void 0 ? '' : _options$seed;\n  var seedPrefix = seed === '' ? '' : \"\".concat(seed, \"-\");\n  var ruleCounter = 0;\n\n  var getNextCounterId = function getNextCounterId() {\n    ruleCounter += 1;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (ruleCounter >= 1e10) {\n        console.warn(['Material-UI: You might have a memory leak.', 'The ruleCounter is not supposed to grow that much.'].join(''));\n      }\n    }\n\n    return ruleCounter;\n  };\n\n  return function (rule, styleSheet) {\n    var name = styleSheet.options.name; // Is a global static MUI style?\n\n    if (name && name.indexOf('Mui') === 0 && !styleSheet.options.link && !disableGlobal) {\n      // We can use a shorthand class name, we never use the keys to style the components.\n      if (pseudoClasses.indexOf(rule.key) !== -1) {\n        return \"Mui-\".concat(rule.key);\n      }\n\n      var prefix = \"\".concat(seedPrefix).concat(name, \"-\").concat(rule.key);\n\n      if (!styleSheet.options.theme[nested] || seed !== '') {\n        return prefix;\n      }\n\n      return \"\".concat(prefix, \"-\").concat(getNextCounterId());\n    }\n\n    if (process.env.NODE_ENV === 'production') {\n      return \"\".concat(seedPrefix).concat(productionPrefix).concat(getNextCounterId());\n    }\n\n    var suffix = \"\".concat(rule.key, \"-\").concat(getNextCounterId()); // Help with debuggability.\n\n    if (styleSheet.options.classNamePrefix) {\n      return \"\".concat(seedPrefix).concat(styleSheet.options.classNamePrefix, \"-\").concat(suffix);\n    }\n\n    return \"\".concat(seedPrefix).concat(suffix);\n  };\n}"],"mappings":"AAAA,OAAOA,MAAM,MAAM,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,aAAa,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,cAAc,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC;AACrH;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,uBAAuBA,CAAA,EAAG;EAChD,IAAIC,OAAO,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACpF,IAAIG,qBAAqB,GAAGJ,OAAO,CAACK,aAAa;IAC7CA,aAAa,GAAGD,qBAAqB,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,qBAAqB;IAChFE,qBAAqB,GAAGN,OAAO,CAACO,gBAAgB;IAChDA,gBAAgB,GAAGD,qBAAqB,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,qBAAqB;IACnFE,aAAa,GAAGR,OAAO,CAACS,IAAI;IAC5BA,IAAI,GAAGD,aAAa,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,aAAa;EACxD,IAAIE,UAAU,GAAGD,IAAI,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,CAACE,MAAM,CAACF,IAAI,EAAE,GAAG,CAAC;EACxD,IAAIG,WAAW,GAAG,CAAC;EAEnB,IAAIC,gBAAgB,GAAG,SAASA,gBAAgBA,CAAA,EAAG;IACjDD,WAAW,IAAI,CAAC;IAEhB,IAAIE,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzC,IAAIJ,WAAW,IAAI,IAAI,EAAE;QACvBK,OAAO,CAACC,IAAI,CAAC,CAAC,4CAA4C,EAAE,oDAAoD,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;MAC7H;IACF;IAEA,OAAOP,WAAW;EACpB,CAAC;EAED,OAAO,UAAUQ,IAAI,EAAEC,UAAU,EAAE;IACjC,IAAIC,IAAI,GAAGD,UAAU,CAACrB,OAAO,CAACsB,IAAI,CAAC,CAAC;;IAEpC,IAAIA,IAAI,IAAIA,IAAI,CAACC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAACF,UAAU,CAACrB,OAAO,CAACwB,IAAI,IAAI,CAACnB,aAAa,EAAE;MACnF;MACA,IAAIP,aAAa,CAACyB,OAAO,CAACH,IAAI,CAACK,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;QAC1C,OAAO,MAAM,CAACd,MAAM,CAACS,IAAI,CAACK,GAAG,CAAC;MAChC;MAEA,IAAIC,MAAM,GAAG,EAAE,CAACf,MAAM,CAACD,UAAU,CAAC,CAACC,MAAM,CAACW,IAAI,EAAE,GAAG,CAAC,CAACX,MAAM,CAACS,IAAI,CAACK,GAAG,CAAC;MAErE,IAAI,CAACJ,UAAU,CAACrB,OAAO,CAAC2B,KAAK,CAAC9B,MAAM,CAAC,IAAIY,IAAI,KAAK,EAAE,EAAE;QACpD,OAAOiB,MAAM;MACf;MAEA,OAAO,EAAE,CAACf,MAAM,CAACe,MAAM,EAAE,GAAG,CAAC,CAACf,MAAM,CAACE,gBAAgB,CAAC,CAAC,CAAC;IAC1D;IAEA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzC,OAAO,EAAE,CAACL,MAAM,CAACD,UAAU,CAAC,CAACC,MAAM,CAACJ,gBAAgB,CAAC,CAACI,MAAM,CAACE,gBAAgB,CAAC,CAAC,CAAC;IAClF;IAEA,IAAIe,MAAM,GAAG,EAAE,CAACjB,MAAM,CAACS,IAAI,CAACK,GAAG,EAAE,GAAG,CAAC,CAACd,MAAM,CAACE,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;;IAElE,IAAIQ,UAAU,CAACrB,OAAO,CAAC6B,eAAe,EAAE;MACtC,OAAO,EAAE,CAAClB,MAAM,CAACD,UAAU,CAAC,CAACC,MAAM,CAACU,UAAU,CAACrB,OAAO,CAAC6B,eAAe,EAAE,GAAG,CAAC,CAAClB,MAAM,CAACiB,MAAM,CAAC;IAC7F;IAEA,OAAO,EAAE,CAACjB,MAAM,CAACD,UAAU,CAAC,CAACC,MAAM,CAACiB,MAAM,CAAC;EAC7C,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}