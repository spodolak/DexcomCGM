{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/DexcomCGM/src/components/Graph.js\";\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport ReactApexCharts from 'react-apexcharts';\nimport { Row } from 'react-bootstrap';\nimport '../App.css';\nimport firebase from '../firebase.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchFirestoreSymptoms = async () => {\n  const data = await firebase.firestore().collection('symptoms').doc('log').get().then(value => {\n    return value.data();\n  });\n  return data;\n};\nclass Graph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.componentDidMount = async () => {\n      const values = await fetchFirestoreSymptoms();\n      this.setState({\n        symptoms: values\n      });\n    };\n    this.state = {\n      symptoms: [],\n      series: [{\n        name: 'blood sugar',\n        data: props.values.map(value => {\n          return value.value;\n        })\n      }],\n      responsive: [{\n        breakpoint: undefined,\n        options: {}\n      }],\n      options: {\n        chart: {\n          height: 500,\n          width: '100%',\n          type: 'area'\n        },\n        dataLabels: {\n          enabled: true\n        },\n        stroke: {\n          curve: 'smooth'\n        },\n        xaxis: {\n          type: 'datetime',\n          categories: props.values.map(value => {\n            return value.displayTime;\n          })\n        },\n        tooltip: {\n          x: {\n            format: 'dd/MM/yy HH:mm'\n          }\n        },\n        fill: {\n          colors: ['#7765E3', '#6564DB', '#2D268E']\n        },\n        colors: ['#2D268E']\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Great day!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"chart\",\n        id: \"chart\",\n        children: /*#__PURE__*/_jsxDEV(ReactApexCharts, {\n          options: this.state.options,\n          series: this.state.series,\n          type: \"area\",\n          height: 350,\n          width: 600\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"outline\",\n          onClick: () => this.props.onSwitchingViews(''),\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n}\nGraph.propTypes = {\n  onSwitchingViews: PropTypes.func,\n  values: PropTypes.array\n};\nexport default Graph;","map":{"version":3,"names":["React","PropTypes","ReactApexCharts","Row","firebase","jsxDEV","_jsxDEV","fetchFirestoreSymptoms","data","firestore","collection","doc","get","then","value","Graph","Component","constructor","props","componentDidMount","values","setState","symptoms","state","series","name","map","responsive","breakpoint","undefined","options","chart","height","width","type","dataLabels","enabled","stroke","curve","xaxis","categories","displayTime","tooltip","x","format","fill","colors","render","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","className","id","onClick","onSwitchingViews","propTypes","func","array"],"sources":["/Users/macbook/Desktop/DexcomCGM/src/components/Graph.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\nimport ReactApexCharts from 'react-apexcharts';\nimport { Row } from 'react-bootstrap';\nimport '../App.css';\nimport firebase from '../firebase.js'\n\n\nconst fetchFirestoreSymptoms = async () => {\n    const data = await firebase.firestore().collection('symptoms').doc('log').get()\n        .then(value => { return value.data() })\n    return data;\n}\n\n\nclass Graph extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            symptoms: [],\n            series: [{\n                name: 'blood sugar',\n                data: props.values.map(value => { return value.value }),\n            },\n            ],\n            responsive: [{\n                breakpoint: undefined,\n                options: {},\n            }],\n            options: {\n                chart: {\n                    height: 500,\n                    width: '100%',\n                    type: 'area',\n                },\n                dataLabels: {\n                    enabled: true\n                },\n                stroke: {\n                    curve: 'smooth'\n                },\n                xaxis: {\n                    type: 'datetime',\n                    categories: props.values.map(value => { return value.displayTime })\n                },\n                tooltip: {\n                    x: {\n                        format: 'dd/MM/yy HH:mm'\n                    },\n                },\n                fill: {\n                    colors: ['#7765E3', '#6564DB', '#2D268E']\n                },\n                colors: ['#2D268E']\n            },\n        };\n    }\n\n    componentDidMount = async () => {\n        const values = await fetchFirestoreSymptoms()\n        this.setState({ symptoms: values });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <h1>Great day!</h1>\n                <Row className=\"chart\" id=\"chart\">\n                    <ReactApexCharts options={this.state.options} series={this.state.series} type=\"area\" height={350} width={600} />\n                </Row>\n                <div>\n                    <button className=\"outline\" onClick={() => this.props.onSwitchingViews('')}>\n                        Done\n          </button>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nGraph.propTypes = {\n    onSwitchingViews: PropTypes.func,\n    values: PropTypes.array\n}\n\nexport default Graph;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}