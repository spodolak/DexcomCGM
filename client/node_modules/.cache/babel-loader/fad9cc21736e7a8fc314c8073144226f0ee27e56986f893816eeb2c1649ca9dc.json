{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/DexcomCGM/client/src/components/AppControl.js\";\nimport React, { useEffect, useState } from 'react';\nimport CurrentBloodSugar from './CurrentBloodSugar.js';\nimport Calibrate from './Calibrate.js';\nimport AddHighSymptom from './AddHighSymptom.js';\nimport AddLowSymptom from './AddLowSymptom.js';\nimport AddSymptom from './AddSymptom.js';\nimport DexcomError from './DexcomError.js';\nimport Graph from './Graph.js';\nimport FootNavigation from './AppFooter.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AppControl extends React.Component {\n  constructor(props) {\n    super(props);\n    //////Oauth 2.0 authorization\n    //Step 1: Get bearer Token\n    this.getBearerToken = () => {\n      console.log(\"my function ran!\");\n      // useEffect(() => {\n      //     fetch(\"/getBearerToken\").then(\n      //         response => response.json()\n      //     ).then(\n      //         data => {\n      //             console.log(data);\n      //             this.setState({ bearerToken: data });\n      //         }\n      //     ) \n      // }, [])\n\n      // var myHeaders = new Headers();\n      // myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n      // var urlencoded = new URLSearchParams();\n      // urlencoded.append(\"client_id\", `${process.env.REACT_APP_CLIENT_ID}`);\n      // urlencoded.append(\"client_secret\", `${process.env.REACT_APP_CLIENT_SECRET}`);\n      // urlencoded.append(\"code\", `${window.location.search.slice(6, 38)}`);\n      // urlencoded.append(\"grant_type\", \"authorization_code\");\n      // // urlencoded.append(\"redirect_uri\", \"https://spodolak.github.io/DexcomCGM\");\n      // urlencoded.append(\"redirect_uri\", \"http://localhost:3000\");\n\n      // var requestOptions = {\n      //     method: 'POST',\n      //     headers: myHeaders,\n      //     body: urlencoded,\n      //     redirect: 'follow'\n      // };\n\n      // fetch(\"https://sandbox-api.dexcom.com/v2/oauth2/token\", requestOptions) //Fetch sandbox dev token\n      //     // fetch(\"https://api.dexcom.com/v2/oauth2/token\", requestOptions) //Fetch dexcom user data\n      //     .then(response => response.json())\n      //     .then((response) => {\n      //         this.setState({ bearerToken: response.access_token });\n      //         this.getBloodSugars(this.state.bearerToken);\n      //     })\n      //     .then(() => { this.getBloodSugars(this.state.bearerToken); })\n      //     .catch(error => console.log('error', error));\n    };\n    //get current time to fetch up-to-date blood sugars\n    this.getTime = () => {\n      function addZero(n) {\n        if (n < 10) {\n          return \"0\" + n;\n        }\n        return n.toString();\n      }\n      let time = new Date();\n      let hours = addZero(time.getHours());\n      let minutes = addZero(time.getMinutes());\n      let seconds = addZero(time.getSeconds());\n      return hours + \":\" + minutes + \":\" + seconds;\n    };\n    //Step 2: Get current blood sugars with bearer token\n    this.getBloodSugars = token => {\n      let currentTime = this.getTime();\n      var myHeaders = new Headers();\n      myHeaders.append(\"Authorization\", `Bearer ${token}`);\n      var requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n      };\n      fetch(`https://sandbox-api.dexcom.com/v2/users/self/egvs?startDate=2020-05-25T${currentTime}&endDate=2020-05-26T${currentTime}`, requestOptions) //Fetch sandbox dev data\n      // fetch(\"https://api.dexcom.com/v2/users/self/egvs?startDate=2020-05-26T00:00:00&endDate=2020-05-26T23:59:00\", requestOptions) //Fetch dexcom user data\n      .then(response => response.json()).then(response => {\n        this.setState({\n          bloodSugarValues: response.egvs\n        });\n        this.setState({\n          currentBloodSugar: response.egvs[0].realtimeValue\n        });\n        this.handleAlert();\n      }).catch(error => console.log('error', error));\n    };\n    this.handleAlert = () => {\n      if (this.state.currentBloodSugar <= this.state.lowAlert) {\n        this.setState({\n          currentView: 'add_low_symptom',\n          currentAlert: 'lowAlert'\n        });\n      } else if (this.state.currentBloodSugar >= this.state.highAlert) {\n        this.setState({\n          currentView: 'add_high_symptom',\n          currentAlert: 'highAlert'\n        });\n      } else {\n        this.setState({\n          currentAlert: 'noAlert'\n        });\n      }\n    };\n    this.handleSwitchingViews = view => {\n      this.setState({\n        currentView: view\n      });\n    };\n    this.handleCalibrate = e => {\n      this.setState({\n        currentBloodSugar: parseInt(e.target.value)\n      });\n    };\n    this.state = {\n      error: null,\n      isLoaded: false,\n      bearerToken: '',\n      currentBloodSugar: null,\n      lowAlert: 70,\n      highAlert: 180,\n      currentAlert: 'noAlert',\n      //'lowAlert or 'highAlert'\n      bloodSugarValues: null,\n      currentView: null,\n      timer: null\n    };\n  }\n  componentDidMount() {\n    if (this.state.bearerToken === '') {\n      this.getBearerToken();\n    } else {\n      this.getBloodSugars(this.state.bearerToken);\n    }\n    setInterval(() => {\n      this.getBloodSugars(this.state.bearerToken);\n      this.handleAlert();\n    }, 60000);\n  }\n  render() {\n    let currentlyVisibleState = null;\n    if (this.state.bloodSugarValues != null) {\n      switch (this.state.currentView) {\n        case 'calibrate':\n          currentlyVisibleState = /*#__PURE__*/_jsxDEV(Calibrate, {\n            onCalibrate: this.handleCalibrate,\n            onSwitchingViews: this.handleSwitchingViews,\n            alertCheck: this.handleAlert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 45\n          }, this);\n          break;\n        case 'add_symptom':\n          currentlyVisibleState = /*#__PURE__*/_jsxDEV(AddSymptom, {\n            onSwitchingViews: this.handleSwitchingViews\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 45\n          }, this);\n          break;\n        case 'add_low_symptom':\n          currentlyVisibleState = /*#__PURE__*/_jsxDEV(AddLowSymptom, {\n            onSwitchingViews: this.handleSwitchingViews\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 45\n          }, this);\n          break;\n        case 'add_high_symptom':\n          currentlyVisibleState = /*#__PURE__*/_jsxDEV(AddHighSymptom, {\n            onSwitchingViews: this.handleSwitchingViews\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 45\n          }, this);\n          break;\n        case 'graph':\n          currentlyVisibleState = /*#__PURE__*/_jsxDEV(Graph, {\n            values: this.state.bloodSugarValues,\n            onSwitchingViews: this.handleSwitchingViews\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 45\n          }, this);\n          break;\n        case 'home':\n          currentlyVisibleState = /*#__PURE__*/_jsxDEV(CurrentBloodSugar, {\n            value: this.state.currentBloodSugar,\n            currentAlert: this.state.currentAlert,\n            onSwitchingViews: this.handleSwitchingViews\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 45\n          }, this);\n          break;\n        default:\n          currentlyVisibleState = /*#__PURE__*/_jsxDEV(CurrentBloodSugar, {\n            value: this.state.currentBloodSugar,\n            currentAlert: this.state.currentAlert,\n            onSwitchingViews: this.handleSwitchingViews\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 45\n          }, this);\n      }\n    } else {\n      currentlyVisibleState = /*#__PURE__*/_jsxDEV(DexcomError, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 37\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [currentlyVisibleState, /*#__PURE__*/_jsxDEV(FootNavigation, {\n        isLoggedIn: true,\n        onSwitchingViews: this.handleSwitchingViews,\n        currentAlert: this.state.currentAlert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default AppControl;","map":{"version":3,"names":["React","useEffect","useState","CurrentBloodSugar","Calibrate","AddHighSymptom","AddLowSymptom","AddSymptom","DexcomError","Graph","FootNavigation","jsxDEV","_jsxDEV","AppControl","Component","constructor","props","getBearerToken","console","log","getTime","addZero","n","toString","time","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","getBloodSugars","token","currentTime","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","then","response","json","setState","bloodSugarValues","egvs","currentBloodSugar","realtimeValue","handleAlert","catch","error","state","lowAlert","currentView","currentAlert","highAlert","handleSwitchingViews","view","handleCalibrate","e","parseInt","target","value","isLoaded","bearerToken","timer","componentDidMount","setInterval","render","currentlyVisibleState","onCalibrate","onSwitchingViews","alertCheck","fileName","_jsxFileName","lineNumber","columnNumber","values","Fragment","children","isLoggedIn"],"sources":["/Users/macbook/Desktop/DexcomCGM/client/src/components/AppControl.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport CurrentBloodSugar from './CurrentBloodSugar.js';\nimport Calibrate from './Calibrate.js';\nimport AddHighSymptom from './AddHighSymptom.js';\nimport AddLowSymptom from './AddLowSymptom.js';\nimport AddSymptom from './AddSymptom.js';\nimport DexcomError from './DexcomError.js';\nimport Graph from './Graph.js';\nimport FootNavigation from './AppFooter.js';\n\nclass AppControl extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            bearerToken: '',\n            currentBloodSugar: null,\n            lowAlert: 70,\n            highAlert: 180,\n            currentAlert: 'noAlert', //'lowAlert or 'highAlert'\n            bloodSugarValues: null,\n            currentView: null,\n            timer: null\n        };\n    }\n\n    //////Oauth 2.0 authorization\n    //Step 1: Get bearer Token\n    getBearerToken = () => {\n        console.log(\"my function ran!\")\n        // useEffect(() => {\n        //     fetch(\"/getBearerToken\").then(\n        //         response => response.json()\n        //     ).then(\n        //         data => {\n        //             console.log(data);\n        //             this.setState({ bearerToken: data });\n        //         }\n        //     ) \n        // }, [])\n\n        // var myHeaders = new Headers();\n        // myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n        // var urlencoded = new URLSearchParams();\n        // urlencoded.append(\"client_id\", `${process.env.REACT_APP_CLIENT_ID}`);\n        // urlencoded.append(\"client_secret\", `${process.env.REACT_APP_CLIENT_SECRET}`);\n        // urlencoded.append(\"code\", `${window.location.search.slice(6, 38)}`);\n        // urlencoded.append(\"grant_type\", \"authorization_code\");\n        // // urlencoded.append(\"redirect_uri\", \"https://spodolak.github.io/DexcomCGM\");\n        // urlencoded.append(\"redirect_uri\", \"http://localhost:3000\");\n\n        // var requestOptions = {\n        //     method: 'POST',\n        //     headers: myHeaders,\n        //     body: urlencoded,\n        //     redirect: 'follow'\n        // };\n\n        // fetch(\"https://sandbox-api.dexcom.com/v2/oauth2/token\", requestOptions) //Fetch sandbox dev token\n        //     // fetch(\"https://api.dexcom.com/v2/oauth2/token\", requestOptions) //Fetch dexcom user data\n        //     .then(response => response.json())\n        //     .then((response) => {\n        //         this.setState({ bearerToken: response.access_token });\n        //         this.getBloodSugars(this.state.bearerToken);\n        //     })\n        //     .then(() => { this.getBloodSugars(this.state.bearerToken); })\n        //     .catch(error => console.log('error', error));\n    }\n\n    //get current time to fetch up-to-date blood sugars\n    getTime = () => {\n        function addZero(n) {\n            if (n < 10) {\n                return \"0\" + n;\n            }\n            return n.toString();\n        }\n\n        let time = new Date();\n        let hours = addZero(time.getHours());\n        let minutes = addZero(time.getMinutes());\n        let seconds = addZero(time.getSeconds());\n\n        return hours + \":\" + minutes + \":\" + seconds;\n    }\n\n    //Step 2: Get current blood sugars with bearer token\n    getBloodSugars = (token) => {\n        let currentTime = this.getTime();\n\n        var myHeaders = new Headers();\n        myHeaders.append(\"Authorization\", `Bearer ${token}`);\n\n        var requestOptions = {\n            \n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n        fetch(`https://sandbox-api.dexcom.com/v2/users/self/egvs?startDate=2020-05-25T${currentTime}&endDate=2020-05-26T${currentTime}`, requestOptions) //Fetch sandbox dev data\n            // fetch(\"https://api.dexcom.com/v2/users/self/egvs?startDate=2020-05-26T00:00:00&endDate=2020-05-26T23:59:00\", requestOptions) //Fetch dexcom user data\n            .then(response => response.json())\n            .then((response) => {\n                this.setState({ bloodSugarValues: response.egvs });\n                this.setState({ currentBloodSugar: response.egvs[0].realtimeValue });\n                this.handleAlert();\n            })\n            .catch(error => console.log('error', error));\n    }\n\n\n    componentDidMount() {\n        if (this.state.bearerToken === '') {\n            this.getBearerToken();\n        } else {\n            this.getBloodSugars(this.state.bearerToken);\n        }\n        setInterval(() => {\n            this.getBloodSugars(this.state.bearerToken);\n            this.handleAlert();\n        }, 60000);\n    }\n\n    handleAlert = () => {\n        if (this.state.currentBloodSugar <= this.state.lowAlert) {\n            this.setState({ currentView: 'add_low_symptom', currentAlert: 'lowAlert' })\n        } else if (this.state.currentBloodSugar >= this.state.highAlert) {\n            this.setState({ currentView: 'add_high_symptom', currentAlert: 'highAlert' })\n        } else {\n            this.setState({ currentAlert: 'noAlert' })\n        }\n    }\n\n    handleSwitchingViews = (view) => {\n        this.setState({ currentView: view });\n    }\n\n    handleCalibrate = (e) => {\n        this.setState({ currentBloodSugar: parseInt(e.target.value) })\n    }\n\n    render() {\n        let currentlyVisibleState = null;\n        if (this.state.bloodSugarValues != null) {\n            switch (this.state.currentView) {\n                case 'calibrate':\n                    currentlyVisibleState = <Calibrate onCalibrate={this.handleCalibrate} onSwitchingViews={this.handleSwitchingViews} alertCheck={this.handleAlert} />\n                    break;\n                case 'add_symptom':\n                    currentlyVisibleState = <AddSymptom onSwitchingViews={this.handleSwitchingViews} />\n                    break;\n                case 'add_low_symptom':\n                    currentlyVisibleState = <AddLowSymptom onSwitchingViews={this.handleSwitchingViews} />\n                    break;\n                case 'add_high_symptom':\n                    currentlyVisibleState = <AddHighSymptom onSwitchingViews={this.handleSwitchingViews} />\n                    break;\n                case 'graph':\n                    currentlyVisibleState = <Graph values={this.state.bloodSugarValues} onSwitchingViews={this.handleSwitchingViews} />\n                    break;\n                case 'home':\n                    currentlyVisibleState = <CurrentBloodSugar value={this.state.currentBloodSugar} currentAlert={this.state.currentAlert} onSwitchingViews={this.handleSwitchingViews} />\n                    break;\n                default:\n                    currentlyVisibleState = <CurrentBloodSugar value={this.state.currentBloodSugar} currentAlert={this.state.currentAlert} onSwitchingViews={this.handleSwitchingViews} />\n            }\n        } else {\n            currentlyVisibleState = <DexcomError />\n        }\n        return (\n            <React.Fragment>\n                {currentlyVisibleState}\n                <FootNavigation isLoggedIn={true} onSwitchingViews={this.handleSwitchingViews} currentAlert={this.state.currentAlert} />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default AppControl;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}