{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/DexcomCGM/client/src/components/AppControl.js\";\nimport React, { useEffect, useState } from 'react';\nimport CurrentBloodSugar from './CurrentBloodSugar.js';\nimport Calibrate from './Calibrate.js';\nimport AddHighSymptom from './AddHighSymptom.js';\nimport AddLowSymptom from './AddLowSymptom.js';\nimport AddSymptom from './AddSymptom.js';\nimport DexcomError from './DexcomError.js';\nimport Graph from './Graph.js';\nimport FootNavigation from './AppFooter.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AppControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.authorizeDexcomUser = () => {\n      let code = window.location.search.slice(6, 38);\n      fetch('/authorizeDexcomUser?code=' + code).then(response => response.json()).then(data => {\n        this.setState({\n          bloodSugarValues: data.egvs\n        });\n        this.setState({\n          currentBloodSugar: data.egvs[data.egvs.length()]\n        });\n        console.log(data);\n      });\n    };\n    this.handleAlert = () => {\n      if (this.state.currentBloodSugar <= this.state.lowAlert) {\n        this.setState({\n          currentView: 'add_low_symptom',\n          currentAlert: 'lowAlert'\n        });\n      } else if (this.state.currentBloodSugar >= this.state.highAlert) {\n        this.setState({\n          currentView: 'add_high_symptom',\n          currentAlert: 'highAlert'\n        });\n      } else {\n        this.setState({\n          currentAlert: 'noAlert'\n        });\n      }\n    };\n    this.handleSwitchingViews = view => {\n      this.setState({\n        currentView: view\n      });\n    };\n    this.handleCalibrate = e => {\n      this.setState({\n        currentBloodSugar: parseInt(e.target.value)\n      });\n    };\n    this.state = {\n      error: null,\n      isLoaded: false,\n      bearerToken: '',\n      currentBloodSugar: null,\n      lowAlert: 70,\n      highAlert: 180,\n      currentAlert: 'noAlert',\n      //'lowAlert or 'highAlert'\n      bloodSugarValues: null,\n      currentView: null,\n      timer: null\n    };\n  }\n  componentDidMount() {\n    if (this.state.bearerToken === '') {\n      this.authorizeDexcomUser();\n    } else {\n      this.getBloodSugars(this.state.bearerToken);\n    }\n    setInterval(() => {\n      this.getBloodSugars(this.state.bearerToken);\n      this.handleAlert();\n    }, 60000);\n  }\n  render() {\n    let currentlyVisibleState = null;\n    if (this.state.bloodSugarValues != null) {\n      switch (this.state.currentView) {\n        case 'calibrate':\n          currentlyVisibleState = /*#__PURE__*/_jsxDEV(Calibrate, {\n            onCalibrate: this.handleCalibrate,\n            onSwitchingViews: this.handleSwitchingViews,\n            alertCheck: this.handleAlert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 45\n          }, this);\n          break;\n        case 'add_symptom':\n          currentlyVisibleState = /*#__PURE__*/_jsxDEV(AddSymptom, {\n            onSwitchingViews: this.handleSwitchingViews\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 45\n          }, this);\n          break;\n        case 'add_low_symptom':\n          currentlyVisibleState = /*#__PURE__*/_jsxDEV(AddLowSymptom, {\n            onSwitchingViews: this.handleSwitchingViews\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 45\n          }, this);\n          break;\n        case 'add_high_symptom':\n          currentlyVisibleState = /*#__PURE__*/_jsxDEV(AddHighSymptom, {\n            onSwitchingViews: this.handleSwitchingViews\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 45\n          }, this);\n          break;\n        case 'graph':\n          currentlyVisibleState = /*#__PURE__*/_jsxDEV(Graph, {\n            values: this.state.bloodSugarValues,\n            onSwitchingViews: this.handleSwitchingViews\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 45\n          }, this);\n          break;\n        case 'home':\n          currentlyVisibleState = /*#__PURE__*/_jsxDEV(CurrentBloodSugar, {\n            value: this.state.currentBloodSugar,\n            currentAlert: this.state.currentAlert,\n            onSwitchingViews: this.handleSwitchingViews\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 45\n          }, this);\n          break;\n        default:\n          currentlyVisibleState = /*#__PURE__*/_jsxDEV(CurrentBloodSugar, {\n            value: this.state.currentBloodSugar,\n            currentAlert: this.state.currentAlert,\n            onSwitchingViews: this.handleSwitchingViews\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 45\n          }, this);\n      }\n    } else {\n      currentlyVisibleState = /*#__PURE__*/_jsxDEV(DexcomError, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 37\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [currentlyVisibleState, /*#__PURE__*/_jsxDEV(FootNavigation, {\n        isLoggedIn: true,\n        onSwitchingViews: this.handleSwitchingViews,\n        currentAlert: this.state.currentAlert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default AppControl;","map":{"version":3,"names":["React","useEffect","useState","CurrentBloodSugar","Calibrate","AddHighSymptom","AddLowSymptom","AddSymptom","DexcomError","Graph","FootNavigation","jsxDEV","_jsxDEV","AppControl","Component","constructor","props","authorizeDexcomUser","code","window","location","search","slice","fetch","then","response","json","data","setState","bloodSugarValues","egvs","currentBloodSugar","length","console","log","handleAlert","state","lowAlert","currentView","currentAlert","highAlert","handleSwitchingViews","view","handleCalibrate","e","parseInt","target","value","error","isLoaded","bearerToken","timer","componentDidMount","getBloodSugars","setInterval","render","currentlyVisibleState","onCalibrate","onSwitchingViews","alertCheck","fileName","_jsxFileName","lineNumber","columnNumber","values","Fragment","children","isLoggedIn"],"sources":["/Users/macbook/Desktop/DexcomCGM/client/src/components/AppControl.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport CurrentBloodSugar from './CurrentBloodSugar.js';\nimport Calibrate from './Calibrate.js';\nimport AddHighSymptom from './AddHighSymptom.js';\nimport AddLowSymptom from './AddLowSymptom.js';\nimport AddSymptom from './AddSymptom.js';\nimport DexcomError from './DexcomError.js';\nimport Graph from './Graph.js';\nimport FootNavigation from './AppFooter.js';\n\nclass AppControl extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            bearerToken: '',\n            currentBloodSugar: null,\n            lowAlert: 70,\n            highAlert: 180,\n            currentAlert: 'noAlert', //'lowAlert or 'highAlert'\n            bloodSugarValues: null,\n            currentView: null,\n            timer: null\n        };\n    }\n\n    authorizeDexcomUser = () => {\n            let code = window.location.search.slice(6, 38);\n            fetch('/authorizeDexcomUser?code='+ code).then(\n                response => response.json()\n            ).then(\n                data => {\n                    this.setState({bloodSugarValues: data.egvs});\n                    this.setState({currentBloodSugar: data.egvs[data.egvs.length()]});\n                    console.log(data)\n                }\n            ) \n    }\n\n    componentDidMount() {\n        if (this.state.bearerToken === '') {\n            this.authorizeDexcomUser();\n        } \n        else {\n            this.getBloodSugars(this.state.bearerToken);\n        }\n        setInterval(() => {\n            this.getBloodSugars(this.state.bearerToken);\n            this.handleAlert();\n        }, 60000);\n    }\n\n    handleAlert = () => {\n        if (this.state.currentBloodSugar <= this.state.lowAlert) {\n            this.setState({ currentView: 'add_low_symptom', currentAlert: 'lowAlert' })\n        } else if (this.state.currentBloodSugar >= this.state.highAlert) {\n            this.setState({ currentView: 'add_high_symptom', currentAlert: 'highAlert' })\n        } else {\n            this.setState({ currentAlert: 'noAlert' })\n        }\n    }\n\n    handleSwitchingViews = (view) => {\n        this.setState({ currentView: view });\n    }\n\n    handleCalibrate = (e) => {\n        this.setState({ currentBloodSugar: parseInt(e.target.value) })\n    }\n\n    render() {\n        let currentlyVisibleState = null;\n        if (this.state.bloodSugarValues != null) {\n            switch (this.state.currentView) {\n                case 'calibrate':\n                    currentlyVisibleState = <Calibrate onCalibrate={this.handleCalibrate} onSwitchingViews={this.handleSwitchingViews} alertCheck={this.handleAlert} />\n                    break;\n                case 'add_symptom':\n                    currentlyVisibleState = <AddSymptom onSwitchingViews={this.handleSwitchingViews} />\n                    break;\n                case 'add_low_symptom':\n                    currentlyVisibleState = <AddLowSymptom onSwitchingViews={this.handleSwitchingViews} />\n                    break;\n                case 'add_high_symptom':\n                    currentlyVisibleState = <AddHighSymptom onSwitchingViews={this.handleSwitchingViews} />\n                    break;\n                case 'graph':\n                    currentlyVisibleState = <Graph values={this.state.bloodSugarValues} onSwitchingViews={this.handleSwitchingViews} />\n                    break;\n                case 'home':\n                    currentlyVisibleState = <CurrentBloodSugar value={this.state.currentBloodSugar} currentAlert={this.state.currentAlert} onSwitchingViews={this.handleSwitchingViews} />\n                    break;\n                default:\n                    currentlyVisibleState = <CurrentBloodSugar value={this.state.currentBloodSugar} currentAlert={this.state.currentAlert} onSwitchingViews={this.handleSwitchingViews} />\n            }\n        } else {\n            currentlyVisibleState = <DexcomError />\n        }\n        return (\n            <React.Fragment>\n                {currentlyVisibleState}\n                <FootNavigation isLoggedIn={true} onSwitchingViews={this.handleSwitchingViews} currentAlert={this.state.currentAlert} />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default AppControl;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}